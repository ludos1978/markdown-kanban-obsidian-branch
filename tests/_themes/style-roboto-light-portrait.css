/* style-roboto-light-portrait.css */

/* @theme style-roboto-light-portrait
 * ^ match this to the filename
 * @auto-scaling true
 * @size 16:9 1280px 720px
 * @size portrait 1280px 1810px
*/

@import "base";
@import url('https://fonts.googleapis.com/css2?family=Rubik:wght@300&display=swap');
/* possible themes: ( uncover, gaia, default )
 * https://marpit.marp.app/theme-css
*/

/* variables */
:root {
	--slide-width: 21cm;
	--slide-height: 29.7cm;
	--top-border-height: 24px;
	--footer-n-border-height: calc(30px + 24px);
	--vertical-border-height: calc(var(--top-border-height) + var(--footer-n-border-height));
  	--h1-height: calc(120px + 48px);
	--h2-height: calc(60px + 24px);
	--h3-height: calc(52px + 20.8px);
	--h4-height: calc(44px + 17.6px);
	--h5-height: calc(40px);
	--h6-height: calc(35.992px);
	--p-height: calc(48px + 16px);
	--footnote-height: calc(48px);
	/* background: #f00; */
}

body.div.svg {
	viewBox: 0 0 1280 1810 !important;
}

body.div.foreignObject {
	width: 1280 !important;
	height: 1810 !important;
}

.slide {
	font-family: "Roboto-Light", sans-serif !important;
}

section {
	font-size: 32px;
	padding: var(--top-border-height) 24px var(--footer-n-border-height) 24px;
	display: inherit;
	background: #fff;
	color: #000;
	font-family: "Roboto-Light", sans-serif !important;
	line-height: 1.5;
	max-width: 720px;
	max-height: 1280px;
	width: 21cm; /* must not be a var */
	height: 29.7cm; /* must not be a var */
	/* width: var(--slide-width);
	height: var(--slide-height); */
	align-items: stretch;
	margin-block-start: 0;
	margin-block-end: 0;
	margin-inline-start: 0;
	margin-inline-end: 0;

	/* font-family: 'Rubik', sans-serif;
	align-items: stretch;
	background: white;
	color: black;
	display: flex;
	flex-direction: column;
	flex-wrap: nowrap;
	font-size: 14px;
	justify-content: left;
	text-align: justify;
	padding: 30px 70px; */
}

h1, h2, h3, h4, h5, h6 {
	line-height: 1.25;
}

h1 {
	font-size: 300% !important;
	justify-content: left;
	margin-left: 8vh;
}

/* section has h1 as child with a .multicolumn following */
section:has(> h1 + .multicolumn) {
	justify-content: flex-start;
}

section:has(h1) {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
}

section:has(h1) > h1,
section:has(h1) > h2,
section:has(h1) > h3,
section:has(h1) > h4,
section:has(h1) > h5,
section:has(h1) > h6,
section:has(h1) > p {
	min-height: unset;
	margin-left: unset;
	display: unset;
	align-self: flex-start;
	/* use rem instead of em for same left margin with different font sizes */
	margin-left: 1rem; 
}

section > h1,
marp-h1,
h1 {
	color: #777;
	padding: 0px;
	margin-bottom: 0px;
	display: flex;
	justify-content: center;
	align-items: center;
	font-size: 300% !important;
	background-color: unset;
}

section > h2,
h2 {
	color: #555;
	margin-bottom: 0.5em;
}

section > h3,
h3,
section > h4,
h4,
section > h5,
h5,
section > h6,
h6 {
	color: #333;
}

section > h1:first-child,
section > h2:first-child,
section > h3:first-child,
section > h4:first-child,
section > h1 + h1 {
	margin-bottom: 0.5em;
	margin-top: 0em;
}

/* sup is not modifying line height */
sup,
sub {
	font-size: 0.65em;
}

section table,
section table tr,
section table tr:nth-child(2n),
section table tr:nth-child(odd),
section table td,
section table thead,
section table thead tr th,
section table th,
foreignObject > section table tbody > tr:nth-child(odd) td,
foreignObject > section table tbody > tr:nth-child(odd) th {
	background-color: transparent;
	border: 0px;
	color: unset;
}

section > div:first-of-type > div > table,
section > table:first-of-type {
	margin: 0px;
}

section th {
	text-align: unset;
}

section blockquote {
	color: #333;
	font-style: oblique;
	/* Vertical line */
	border-left: 4px solid #777; 
	/* Space between the line and the text */
	padding-left: 15px;
	/* Indent the block from the left */
	margin-left: 10px;
}
/* after a h1 we must align left */
h1 + blockquote {
	align-self: flex-start;
	margin-left: calc(var(--marpit-root-font-size, 1rem)* 1 + 20px) /* use rem instead of em for same left margin with different font sizes */;
}

section blockquote:before,
section blockquote:after {
	content: unset;
}

section strong {
	color: #333;
	font-weight: bolder;
}

/* page number */
section::after {
	height: 50px;
	padding: unset;
	padding-right: 10px;
}

section footer,
section header {
	display: flex;
	width: 100%;
	justify-content: right;
	padding: 10px 150px 10px 25px;
	line-height: 20px !important;
	height: 40px !important;
	pointer-events: none;
	color: unset;
	right: 50px;
	font-size: 12px;
}
section > footer > img {
	/* redefine and reset img settings */
	object-fit: scale-down;
	width: unset;
	height: unset;
}

section :is(pre,marp-pre) {
	margin: 0px;
}

/* maximum size of image, without figcaption or title, use max- othervise the images cant be made smaller with w: and all text will be outside the slide */
section > figure {
	max-width: calc(var(--slide-width) - 48px);
	max-height: calc(var(--slide-height) - 68px);
}

figure {
	/* display: flex; */
	align-content: stretch;
	justify-content: center;
	align-items: stretch;

	/* unset user agent stylesheet */
	margin-block-start: 0;
	margin-block-end: 0;
	margin-inline-start: 0;
	margin-inline-end: 0;
	gap: unset;
}

/* within flex use max space available */
video,
img {
	display: block;
	object-fit: contain;
	max-width: inherit;
	max-height: inherit;
	align-items: center;

	width: 100%;
}

/* when constrained by height */
section > .multicolumn > .multicolumn-column > figure,
section > .multicolumn > .multicolumn-column > figure > img {
	width: 100%; /* or auto */
	height: 100%;
	max-width: 100%;
	max-height: inherit;
}

/* important for max image height */
section > .multicolumn > .multicolumn-column {
	max-height: inherit;
}

/* an image or video with an reference */
figure:has(img),
p:has(img),
p:has(video) {
	text-align: center;
	margin: 0 auto;
	min-height: fit-content;

	width: 100%;
	height: auto;
}

/* video only */
/* section > figure:has(video) > video {
	height: calc(var(--slide-height) - 80px);
} */

/* video (link.mp4 "label") */
/* section:has(figcaption) > p:has(video) > video {
	height: calc(var(--slide-height) - 120px);
} */

/* video, figcaption */
/* section > figure:has(video + figcaption) > video {
	max-height: calc(var(--slide-height) - 120px);
} */

/* video, text afterwards (p) */
/* section:has(p) > figure:has(video) > video {
	max-height: calc(var(--slide-height) - 140px);
} */

/* h2, video */
/* section:has(figcaption) > p:has(video) > video,
section:is(h2) ~ figure:has(video) > video {
	max-height: calc(var(--slide-height) - 160px);
} */

/* h2, video, figcaption */
/* section:is(h2) ~ figure:has(video + figcaption) > video {
	max-height: calc(var(--slide-height) - 200px);
} */

/* footnote with h1, h2, ... */
section h1:has(.footnote-ref) sup {
	font-size: 0.2em;
	top: -2em;
	position: relative;
}
section h2:has(.footnote-ref) sup {
	font-size: 0.4em;
	top: -0.5em;
	position: relative;
}
section h3:has(.footnote-ref) sup {
	font-size: 0.4em;
	top: -0.5em;
	position: relative;
}

/* caption to an image or video */
figcaption,
.footnote-ref {
	display: inline-block;
}

/* if figcaption follows p, p has img or video, add this to the p > img*/
section > p:has(~ figcaption):has(img) > img,
section > figure:has(figcaption):has(img) > img,
section > p:has(~ figcaption):has(img) {
	flex-direction: column;
	text-align: center;
	align-items: center;
	/* width: calc(var(--slide-width) - 96px); */
	max-width: 100%;
	/* height: calc(var(--slide-height) - 130px);
	max-height: calc(var(--slide-height) - 130px); */
}

section > p:has(~ figcaption):has(video) > video,
section > figure:has(figcaption):has(video) > video,
section > figure:has(figcaption) {
	flex-direction: column;
	text-align: center;
	align-items: center;
}

section:has(figcaption) > figure {
	text-align: center;
}

/* testing md-it-container
use for example

:::columns
:::small66
[toc]
:::
:::

*/
.note {
	font-size: 			0.8em;
	background-color: 	#fdfd49; 
	color: 				#333; 
	border-left: 		solid #000 4px; 
	border-radius: 		4px;
	padding:			0.5em 0.5em 0.2em 0.5em;
	margin-left:		0em;
}

.comment {
  position: absolute;
  bottom: 0;
  left: 0;
}

.highlight {
	background-color: 	#fdfd49; 
	color: 				#333; 
	border-left: 		solid #000 4px; 
	border-radius: 		4px;
	padding:			0.5em 0.5em 0.2em 0.5em;
	margin-left:		0em;
}

.mark-red {
	background-color: 	lightcoral; 
}

.mark-green {
	background-color: 	lightgreen; 
}

.mark-blue {
	background-color: 	lightblue; 
}

.mark-cyan {
	background-color: 	lightcyan; 
}

.mark-magenta {
	background-color: 	lightpink; 
}

.mark-yellow {
	background-color: 	lightyellow; 
}

.columns {
	column-count: 2;
}
.columns3 {
	column-count: 3;
}
.small66 {
	font-size: 66%;
}
.small50 {
	font-size: 50%;
}
.small33 {
	font-size: 33%;
}
.small25 {
	font-size: 25%;
}
.center {
	justify-content: center;
	display: flex;
}
.center100 {
	height: 100%;
	align-content: center;
}
.right {
	justify-content: right;
	display: flex;
}
.caption {
	justify-content: right;
	display: flex;
}

/* end testing md-it-container */

/* special font sizes
usage in md, dont apply to headings and footer
<!-- _class: font40 -->
*/

section.font80
	> :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(footer):not(
		.footnotes
	) {
	font-size: 80px;
	padding: 0px 60px 60px 60px;
	font-weight: bolder;
	color: #666;
}
section.font60
	> :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(footer):not(
		.footnotes
	) {
	font-size: 60px;
	padding: 0px 40px 40px 40px;
	font-weight: bold;
	color: #666;
}
section.font50 > :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(footer):not(.footnotes) {
	font-size: 50px;
	padding: 0px 45px 45px 45px;
	font-weight: bold;
	color: #666;
}
section.font36 > :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(footer):not(.footnotes) {
	font-size: 36px;
}
section.font32 > :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(footer):not(.footnotes) {
	font-size: 32px;
}
section.font31 > :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(footer):not(.footnotes) {
	font-size: 31px;
}
section.font30 > :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(footer):not(.footnotes) {
	font-size: 30px;
}
section.font29 > :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(footer):not(.footnotes) {
	font-size: 29px;
}
section.font28 > :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(footer):not(.footnotes) {
	font-size: 28px;
}
section.font26 > :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(footer):not(.footnotes) {
	font-size: 26px;
}
section.font24 > :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(footer):not(.footnotes) {
	font-size: 24px;
}
section.font22 > :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(footer):not(.footnotes) {
	font-size: 22px;
}
section.font20 > :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(footer):not(.footnotes) {
	font-size: 20px;
}
section.font16 > :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(footer):not(.footnotes) {
	font-size: 16px;
}
section.font15 > :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(footer):not(.footnotes) {
	font-size: 15px;
}
section.font14 > :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(footer):not(.footnotes) {
	font-size: 14px;
}
section.font13 > :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(footer):not(.footnotes) {
	font-size: 13px;
}
section.font12 > :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(footer):not(.footnotes) {
	font-size: 12px;
}
section.font10 > :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(footer):not(.footnotes) {
	font-size: 10px;
}
section.font8 > :not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(footer):not(.footnotes) {
	font-size: 8px;
}

/* _class: highlight : instead of italic, bold */
section.highlight em {
	color: darkviolet;
	font-weight: normal;
	font-style: normal;
}

section.highlight :is(h1, h2, h3, h4, h5, h6) em {
	color: darkviolet;
	font-weight: bold;
	font-style: bold;
}

section.highlight strong {
	color: blue;
	font-weight: normal;
	font-style: normal;
}

section.highlight :is(h1, h2, h3, h4, h5, h6) strong {
	color: blue;
	font-weight: bold;
	font-style: bold;
}

section.highlight em strong {
	color: darkgreen;
	font-weight: normal;
	font-style: normal;
}

section.highlight :is(h1, h2, h3, h4, h5, h6) em strong {
	color: darkgreen;
	font-weight: bold;
	font-style: bold;
}

section.highlight s {
	color: #555;
	font-weight: normal;
	font-style: normal;
	text-decoration: none;
}

section.highlight :is(h1, h2, h3, h4, h5, h6) s {
	color: #888;
	font-weight: bold;
	font-style: bold;
	text-decoration: none;
}

section.no-word-break,
section.no_word_break,
section.no_wordbreak {
	word-break: break-all;
	hyphens: none;
}



/* try to align items vertically (especially a multicolumn */
section.center,
section.center .multicolumn-column,
section.center .multicolumn,
section.center figure {
	align-items: center;
	justify-content: center;
	height: 100%;
	text-align: center;
}

section.center100 {
	height: 100%;
	align-content: center;
}

section.fontbg > p,
section.fontbg > h1,
section.fontbg > h2,
section.fontbg > h3,
section.fontbg > h4,
section.fontbg > h5,
section.fontbg > h6,
section.fontbg .multicolumn-column:has(ul),
section.fontbg ul {
	background-color: white; 
}

section.column_spacing .multicolumn  {
	row-gap: 18px;
	column-gap: 18px;
}

section.column_border .multicolumn  {
	row-gap: 18px;
	column-gap: 18px;
	border-color: gray;
}

/* END special font sizes
usage in md, dont apply to headings and footer
<!-- _class: font40 -->
*/

ul,
ol {
	margin-block-end: 0;
	list-style-position: outside;
	flex-direction: column;
}

/* no newline after dot use with "list-style-position: inside;" in ul,ol 
li > p {
    display: inline;
} */


li {
	text-align: match-parent;
}

ul,
ul > li,
ol,
ol > li {
	margin-block-start: 0;
	margin-block-end: 0;
	margin: 0;
}

ul > li > p {
	margin: 0;
	margin-bottom: 0.0em;
}

ul > li:first-child,
ol > li:first-child {
	margin: 0;
}
section > ul:first-child,
section > ol:first-child {
	padding-top: 0px;
}
section > ul,
section > ul > li:first-child > p,
section > ol,
section > ol > li:first-child > p {
	padding-top: 0px;
	margin-top: 0px;
}

/* kein zusatzabstand für eine unterliste *innerhalb* einer liste */
ol > li > ul:not(:last-child),
ul > li > ul:not(:last-child),
ol > li > ol:not(:last-child),
ul > li > ol:not(:last-child) {
	margin-block-end: 0.0em;
}

ul > li > ul > li:last-child,
ol > li > ul > li:last-child,
ul > li > ol > li:last-child,
ol > li > ol > li:last-child {
	margin-block-end: 0.5em;
	margin-bottom: 0.0em;
}

/* kein zusatzabstand für das letzte element in einer h1 aufreihung (vertikale zentrierung) */
h1:last-child {
  margin-bottom: 0;
}

/* for + list items */
ul:has([style*="marpit-fragments-plus"]) {
	margin-block-end: 0;
	padding-inline-start: 0;
}

li[style*="marpit-fragments-plus"] {
	list-style-type: none
}

/* after a - list comes a text item 
   after a - list comes a + list (which has no dot) 
*/
ul:has(> li[style*="marpit-fragments-plus"]):has(+ ul),
ul:has(+ ul > li[style*="marpit-fragments-plus"]),
ul:has(+ p) {
	margin-bottom: 0.5em;
}

p:has(+ ul > li[style*="marpit-fragments-plus"]) {
	margin-bottom: 0em;
}


/* ul :is(ul), 
ul + ul {
	margin-bottom: 0.0em;
	margin-block-end: 0.0em;
} */

/* ul:not(+ ul) > li:last-child,
ol > li:last-child {
	margin-bottom: 0.5em;
} */

/* end font sizes */

section nav ol,
.multicolumn-column ol {
	margin-block-start: 0;
}

section .multicolumn {
	padding: 0px !important;
	/* max-height: -webkit-fill-available; */
	max-height: inherit;
	max-width: inherit;
	/* gap: 18px; */
}

section.column_spacing .multicolumn {
	row-gap: 0px;
	column-gap: 0px;
}

section .multicolumn-column {
	/* max-height: -webkit-fill-available; */
	max-height: inherit;
	max-width: inherit;
}

.multicolumn > * {
	flex: 1;
}

/* when using ---: :--: :--- add a margin in between */
.multicolumn-column {
	margin-right: 0.75em; /* right border */
	padding-right: 0.5em; /* left border */
	/* allow to break lines, to prevent unevenly spaced ---: :--: :--- */
	word-break: break-word;
	hyphens: auto;
}
.multicolumn-column:last-child {
	margin-right: 0;
	padding-right: 0;
}

/* _class: columnborder adds a vertical border to the multicolumn */
section.column_border .multicolumn-column  {
    border-right:1px solid black;
}
section.column_border .multicolumn-column:last-child  {
	border-right: 0;
}

.multicolumn-column > *:first-child {
	margin-top: 0px;
}

/* fix p to not have a top-margin within a multicolumn-column */
/* this is too general, because with small fonts it looses textblock spacing, maybe :first fixes it */
section p,
section > p {
	margin-top: 0;
	margin-bottom: 0.5em;
	max-height: inherit;
}

section > p:has(img),
section > p:has(video),
section > p > img,
section > p > video {
	/* width: calc(var(--slide-width) - 96px);
	height: calc(var(--slide-height) - 96px); */
}

section > p:has(img),
section > p:has(video),
section > p > img,
section > p > video {
	/* 
	This will align left
	width: auto;
	float: left;
	justify-content: center; */
}

/* with a footnote a img should be displayed block 
	(footnote below image, both centered) */
section p:has(img):has(.footnote-ref),
section p:has(video):has(.footnote-ref),
section > p:has(img):has(.footnote-ref),
section > p:has(video):has(.footnote-ref) {
	display: block;
}


section:has(h2):has(p) > p > img
section:has(h2) .multicolumn {
	max-height: calc(var(--slide-height) - 180px);
}

/* center images vertically */
section > figure {
	align-items: center;
	justify-content: center;
	/* display: flex; */
	height: 100%;
}

/* update 2024 11 17, calculated values */

/* figure */

figure:empty {
	height: 0;
}

section > p:has(img),
section > p:has(img) > img,
section > p:has(video),
section > p:has(video) > video {
	max-height: calc(var(--slide-height) - var(--vertical-border-height));
}

section > p:has(img):not(:empty),
section > p:has(img):not(:empty) > img,
section > p:has(video):not(:empty),
section > p:has(video):not(:empty) > video,
section > figure:has(img):has(figcaption) {
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--top-border-height));
}

/* h, figure */
section:has(> figure) > figure,
section:has(> figure) > figure > video,
section:has(> figure) .multicolumn {
	max-height: calc(var(--slide-height) - var(--vertical-border-height));
}

section:has(> h1):has(> figure) > figure,
section:has(> h1):has(> figure) > figure > video,
section:has(> h1) > .multicolumn {
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h1-height));
}

section:has(> h2):has(> figure) > figure,
section:has(> h2):has(> figure) > figure > video,
section:has(> h2) > .multicolumn {
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h2-height));
}

section:has(> h3):has(> figure) > figure,
section:has(> h3):has(> figure) > figure > video,
section:has(> h3) > .multicolumn {
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h3-height));
}

section:has(> h4):has(> figure) > figure,
section:has(> h4):has(> figure) > figure > video,
section:has(> h4) > .multicolumn {
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h4-height));
}

section:has(> h5):has(> figure) > figure,
section:has(> h5):has(> figure) > figure > video,
section:has(> h5) > .multicolumn {
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h5-height));
}

section:has(> h6):has(> figure) > figure,
section:has(> h6):has(> figure) > figure > video,
section:has(> h6) > .multicolumn {
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h6-height));
}

/* h, figure with figcapton */

/* section:has(> h1):has(> figure:has(> figcaption)) > figure,
section:has(> h1):has(> figure:has(> figcaption)) > figure > video  {
	max-height: 602px;
} */


/* h, figure, p (witout img child) */
section:has(> p:not(img)):has(> figure) > figure,
section:has(> p:not(img)):has(> figure) > figure > video,
section:has(> p:not(img)) > .multicolumn {
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--p-height));
}

section:has(> h1):has(> p:not(img)):has(> figure) > figure,
section:has(> h1):has(> p:not(img)):has(> figure) > figure > video,
section:has(> h1):has(> p:not(img)) > .multicolumn {
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h1-height) - var(--p-height));
}

section:has(> h2):has(> p:not(img)):has(> figure) > figure,
section:has(> h2):has(> p:not(img)):has(> figure) > figure > video,
section:has(> h2):has(> p:not(img)) > .multicolumn {
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h2-height) - var(--p-height));
}

section:has(> h3):has(> p:not(img)):has(> figure) > figure,
section:has(> h3):has(> p:not(img)):has(> figure) > figure > video,
section:has(> h3):has(> p:not(img)) > .multicolumn {
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h3-height) - var(--p-height));
}

section:has(> h4):has(> p:not(img)):has(> figure) > figure,
section:has(> h4):has(> p:not(img)):has(> figure) > figure > video,
section:has(> h4):has(> p:not(img)) > .multicolumn {
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h4-height) - var(--p-height));
}

section:has(> h5):has(> p:not(img)):has(> figure) > figure,
section:has(> h5):has(> p:not(img)):has(> figure) > figure > video,
section:has(> h5):has(> p:not(img)) > .multicolumn {
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h5-height) - var(--p-height));
}

section:has(> h6):has(> p:not(img)):has(> figure) > figure,
section:has(> h6):has(> p:not(img)):has(> figure) > figure > video,
section:has(> h6):has(> p:not(img)) > .multicolumn {
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h6-height) - var(--p-height));
}

/* h, figure, footnote */

section:has(> .footnotes):not(> p:has(img)):has(> p:has(img)) > p:has(img),
section:has(> .footnotes):not(> p:has(img)):has(> p:has(img)) > p:has(img) > img,
section:has(> .footnotes):not(> p:has(img)):has(> p:has(img)) > p:has(video),
section:has(> .footnotes):not(> p:has(img)):has(> p:has(img)) > p:has(video) > video,
section:not(> p:has(img)):has(> p:has(img)) > .multicolumn:has(.footnotes) {
	height: min-content; /*calc(var(--slide-height) - var(--vertical-border-height) - var(--footnote-height));*/
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--footnote-height));
}

section:has(> h1):has(> .footnotes) > p:has(img),
section:has(> h1):has(> .footnotes) > p:has(img) > img,
section:has(> h1):has(> .footnotes) > p:has(video),
section:has(> h1):has(> .footnotes) > p:has(video) > video,
section:has(> h1):has(> .footnotes) > .multicolumn,
section:has(> h1) > .multicolumn:has(.footnotes),
section:has(> h1):has(> .footnotes):has(> figure) > figure,
section:has(> h1):has(> .footnotes):has(> figure) > figure > video {
	height: min-content; /*calc(var(--slide-height) - var(--vertical-border-height) - var(--h1-height) - var(--footnote-height));*/
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h1-height) - var(--footnote-height));
}

section:has(> h2):has(> .footnotes) > p:has(img),
section:has(> h2):has(> .footnotes) > p:has(img) > img,
section:has(> h2):has(> .footnotes) > p:has(video),
section:has(> h2):has(> .footnotes) > p:has(video) > video,
section:has(> h2):has(> .footnotes) > .multicolumn,
section:has(> h2) > .multicolumn:has(.footnotes),
section:has(> h2):has(> .footnotes):has(> figure) > figure,
section:has(> h2):has(> .footnotes):has(> figure) > figure > video {
	height: min-content; /* calc(var(--slide-height) - var(--vertical-border-height) - var(--h2-height) - var(--footnote-height));*/
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h2-height) - var(--footnote-height));
}

section:has(> h3):has(> .footnotes) > p:has(img),
section:has(> h3):has(> .footnotes) > p:has(img) > img,
section:has(> h3):has(> .footnotes) > p:has(video),
section:has(> h3):has(> .footnotes) > p:has(video) > video,
section:has(> h3):has(> .footnotes) > .multicolumn,
section:has(> h3) > .multicolumn:has(.footnotes),
section:has(> h3):has(> .footnotes):has(> figure) > figure,
section:has(> h3):has(> .footnotes):has(> figure) > figure > video {
	height: min-content; /* calc(var(--slide-height) - var(--vertical-border-height) - var(--h3-height) - var(--footnote-height));*/
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h3-height) - var(--footnote-height));
}

section:has(> h4):has(> .footnotes) > p:has(img),
section:has(> h4):has(> .footnotes) > p:has(img) > img,
section:has(> h4):has(> .footnotes) > p:has(video),
section:has(> h4):has(> .footnotes) > p:has(video) > video,
section:has(> h4):has(> .footnotes) > .multicolumn,
section:has(> h4) > .multicolumn:has(.footnotes),
section:has(> h4):has(> .footnotes):has(> figure) > figure,
section:has(> h4):has(> .footnotes):has(> figure) > figure > video {
	height: min-content; /*calc(var(--slide-height) - var(--vertical-border-height) - var(--h4-height) - var(--footnote-height));*/
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h4-height) - var(--footnote-height));
}

section:has(> h5):has(> .footnotes) > p:has(img),
section:has(> h5):has(> .footnotes) > p:has(img) > img,
section:has(> h5):has(> .footnotes) > p:has(video),
section:has(> h5):has(> .footnotes) > p:has(video) > video,
section:has(> h5):has(> .footnotes) > .multicolumn,
section:has(> h5) > .multicolumn:has(.footnotes),
section:has(> h5):has(> .footnotes):has(> figure) > figure,
section:has(> h5):has(> .footnotes):has(> figure) > figure > video {
	height: min-content; /*calc(var(--slide-height) - var(--vertical-border-height) - var(--h5-height) - var(--footnote-height));*/
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h5-height) - var(--footnote-height));
}

section:has(> h6):has(> .footnotes) > p:has(img),
section:has(> h6):has(> .footnotes) > p:has(img) > img,
section:has(> h6):has(> .footnotes) > p:has(video),
section:has(> h6):has(> .footnotes) > p:has(video) > video,
section:has(> h6):has(> .footnotes) > .multicolumn,
section:has(> h6) > .multicolumn:has(.footnotes),
section:has(> h6):has(> .footnotes):has(> figure) > figure,
section:has(> h6):has(> .footnotes):has(> figure) > figure > video {
	height: min-content; /*calc(var(--slide-height) - var(--vertical-border-height) - var(--h6-height) - var(--footnote-height));*/
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h6-height) - var(--footnote-height));
}

/* h, p (not img), figure, footnote */

section:has(> .footnotes):has(p + p > img) > p:has(img),
section:has(> .footnotes):has(p + p > img) > p:has(img) > img,
section:has(> .footnotes):has(p + p > video) > p:has(video),
section:has(> .footnotes):has(p + p > video) > p:has(video) > video,
section:has(> .footnotes):has(p + p > .multicolumn) > .multicolumn,
section:has(p + p > .multicolumn) > .multicolumn:has(.footnotes) {
	height: min-content; /*calc(var(--slide-height) - var(--vertical-border-height) - var(--footnote-height) - var(--p-height));*/
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--footnote-height) - var(--p-height));
}

section:has(> h1):has(> .footnotes):has(p + p > img) > p:has(img),
section:has(> h1):has(> .footnotes):has(p + p > img) > p:has(img) > img,
section:has(> h1):has(> .footnotes):has(p + p > video) > p:has(video),
section:has(> h1):has(> .footnotes):has(p + p > video) > p:has(video) > video,
section:has(> h1):has(> .footnotes):has(p + p > .multicolumn) > .multicolumn,
section:has(> h1):has(p + p > .multicolumn) > .multicolumn:has(.footnotes)  {
	height: min-content; /*calc(var(--slide-height) - var(--vertical-border-height) - var(--h1-height) - var(--footnote-height) - var(--p-height));*/
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h1-height) - var(--footnote-height) - var(--p-height));
}

section:has(> h2):has(> .footnotes):has(p + p > img) > p:has(img),
section:has(> h2):has(> .footnotes):has(p + p > img) > p:has(img) > img,
section:has(> h2):has(> .footnotes):has(p + p > video) > p:has(video),
section:has(> h2):has(> .footnotes):has(p + p > video) > p:has(video) > video,
section:has(> h2):has(> .footnotes):has(p + p > .multicolumn) > .multicolumn,
section:has(> h2):has(p + p > .multicolumn) > .multicolumn:has(.footnotes) {
	height: min-content; /*calc(var(--slide-height) - var(--vertical-border-height) - var(--h2-height) - var(--footnote-height) - var(--p-height));*/
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h2-height) - var(--footnote-height) - var(--p-height));
}

section:has(> h3):has(> .footnotes):has(p + p > img) > p:has(img),
section:has(> h3):has(> .footnotes):has(p + p > img) > p:has(img) > img,
section:has(> h3):has(> .footnotes):has(p + p > video) > p:has(video),
section:has(> h3):has(> .footnotes):has(p + p > video) > p:has(video) > video,
section:has(> h3):has(> .footnotes):has(p + p > .multicolumn) > .multicolumn,
section:has(> h3):has(p + p > .multicolumn) > .multicolumn:has(.footnotes) {
	height: min-content; /*calc(var(--slide-height) - var(--vertical-border-height) - var(--h3-height) - var(--footnote-height) - var(--p-height));*/
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h3-height) - var(--footnote-height) - var(--p-height));
}

section:has(> h4):has(> .footnotes):has(p + p > img) > p:has(img),
section:has(> h4):has(> .footnotes):has(p + p > img) > p:has(img) > img,
section:has(> h4):has(> .footnotes):has(p + p > video) > p:has(video),
section:has(> h4):has(> .footnotes):has(p + p > video) > p:has(video) > video,
section:has(> h4):has(> .footnotes):has(p + p > .multicolumn) > .multicolumn,
section:has(> h4):has(p + p > .multicolumn) > .multicolumn:has(.footnotes) {
	height: min-content; /*calc(var(--slide-height) - var(--vertical-border-height) - var(--h4-height) - var(--footnote-height) - var(--p-height));*/
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h4-height) - var(--footnote-height) - var(--p-height));
}

section:has(> h5):has(> .footnotes):has(p + p > img) > p:has(img),
section:has(> h5):has(> .footnotes):has(p + p > img) > p:has(img) > img,
section:has(> h5):has(> .footnotes):has(p + p > video) > p:has(video),
section:has(> h5):has(> .footnotes):has(p + p > video) > p:has(video) > video,
section:has(> h5):has(> .footnotes):has(p + p > .multicolumn) > .multicolumn,
section:has(> h5):has(p + p > .multicolumn) > .multicolumn:has(.footnotes) {
	height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h5-height) - var(--footnote-height) - var(--p-height));
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h5-height) - var(--footnote-height) - var(--p-height));
}

section:has(> h6):has(> .footnotes):has(p + p > img) > p:has(img),
section:has(> h6):has(> .footnotes):has(p + p > img) > p:has(img) > img,
section:has(> h6):has(> .footnotes):has(p + p > video) > p:has(video),
section:has(> h6):has(> .footnotes):has(p + p > video) > p:has(video) > video,
section:has(> h6):has(> .footnotes):has(p + p > .multicolumn) > .multicolumn,
section:has(> h6):has(p + p > .multicolumn) > .multicolumn:has(.footnotes) {
	height: min-content; /*calc(var(--slide-height) - var(--vertical-border-height) - var(--h6-height) - var(--footnote-height) - var(--p-height));*/
	max-height: calc(var(--slide-height) - var(--vertical-border-height) - var(--h6-height) - var(--footnote-height) - var(--p-height));
}






/* dont do this on p, as with li > ul it breaks above/below styles */
section .multicolumn h1,
section .multicolumn h2,
section .multicolumn h3,
section .multicolumn h4,
section .multicolumn h5,
section .multicolumn h6 {
	margin-top: 0;
	margin-bottom: 0.5em;
}

/* footnotes */
section .footnotes {
	/* bottom aligned */
	border: 0px;
	width: 100vw;
	padding-top: 0px;
	position: absolute;
	bottom: 0;
	left: 0;
	padding: 0 0 0 20px;
	font-size: 12px;
	text-align: left;
}
section .footnotes ol {
	margin-block-start: 0px;
	margin-block-end: 20px;
	list-style-position: outside;
}
section .footnotes li p {
	margin-top: 0px;
	margin-bottom: 0px;
}
section .footnotes li + li {
	margin: 0;
}
/* end footnotes */

input[type="checkbox" i] {
    accent-color: #9d3039;
	width: 1.5em;
	height: 1.5em;
	margin: 1em;
}

