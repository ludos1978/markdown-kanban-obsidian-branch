:root {
  --whitespace: 4px;
  --whitespate-neg: calc(-1 * var(--whitespace));
  --whitespace-mul2: calc(var(--whitespace) * 2);
  --whitespace-div3-mul2: calc(var(--whitespace) / 3 * 2);
  --whitespace-div2: calc(var(--whitespace) / 2);
  --whitespace-div4: calc(var(--whitespace) / 4);
  --task-height: auto;
  --column-width: 350px;
  --collapsed-column-width: 40px;

  /* Task and section highlight colors - easily configurable */
  --task-focus-color: gray;
  --task-hover-color: var(--vscode-focusBorder);
  --section-focus-color: gray;

  /* Compact view - smaller fonts and padding when content outside viewport */
  --compact-font-size: 0.85em;
  --compact-visibility-threshold: 0.3; /* Apply when < 30% visible */
  --compact-column-footer-padding: var(--whitespace-div4);
  --compact-column-margin-height: var(--whitespace-div4);
}

* {
  box-sizing: border-box;
}

body {
  font-family: var(--vscode-font-family);
  color: var(--vscode-foreground);
  background-color: var(--vscode-editor-background);
  margin: 0;
  padding: 0;
  overflow: hidden; /* Prevent body scroll - container handles it */
  height: 100vh;
}

/* File info bar - fixed at top */
.file-info-bar {
  background-color: var(--vscode-titleBar-activeBackground);
  border-bottom: 1px solid var(--vscode-panel-border);
  padding: var(--whitespace-div2);
  position: fixed;
  z-index: 100;
  top: 0;
  left: 0;
  right: 0;
}

.file-info-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 100%;
  position: relative;
}

.file-info-left {
  display: flex;
  align-items: center;
  gap: 6px;
  flex: 1;
  min-width: 0;
}

.file-info-center {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 6px;
  flex-shrink: 0;
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

.file-icon {
  font-size: 16px;
  flex-shrink: 0;
}

.file-name {
  color: var(--vscode-titleBar-activeForeground);
  font-weight: 500;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  flex: 1;
  min-width: 0;
  cursor: pointer;
  transition: color 0.2s ease;
}

.file-name:hover {
  color: var(--vscode-textLink-activeForeground);
  text-decoration: underline;
}

.file-info-right {
  display: flex;
  gap: 6px;
  align-items: center;
  flex-shrink: 0;
  container-type: inline-size;
	justify-content: flex-end;
}

/* Consistent styling for all file-info header elements */
.file-info-left .global-fold-btn,
.file-info-left .sort-btn,
.file-info-center .clipboard-card-source,
.file-info-center .empty-card-source,
.file-info-right .global-fold-btn,
.file-info-right .sort-btn,
.file-info-right .font-size-btn,
.file-info-right .refresh-btn,
.file-info-right .layout-presets-btn,
.file-info-right .file-bar-menu-btn {
  border: 1px solid var(--vscode-button-border, transparent);
  padding: 4px 8px;
  margin: 0;
  height: 24px;
  min-width: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 4px;
  box-sizing: border-box;
  font-size: 12px;
}

/* Text styling for button labels */
.menu-text {
  font-weight: 500;
}

.menu-icon {
  font-size: 14px;
}

.font-size-icon {
  font-size: 14px;
  font-weight: bold;
}

.refresh-btn.pending {
  background: var(--vscode-inputValidation-warningBackground);
  color: var(--vscode-inputValidation-warningForeground);
  border-color: var(--vscode-inputValidation-warningBorder);
}

.refresh-btn.saved {
  background: var(--vscode-inputValidation-infoBackground);
  color: var(--vscode-inputValidation-infoForeground);
  border-color: var(--vscode-inputValidation-infoBorder);
}


/* Layout Presets Menu */
.layout-presets-menu-container {
  position: relative;
  display: inline-block;
  /* margin-left: 8px; */
}

.layout-presets-btn {
  background: var(--vscode-button-secondaryBackground);
  color: var(--vscode-button-secondaryForeground);
  border-color: var(--vscode-button-border);
  cursor: pointer;
}

.layout-presets-btn:hover {
  background: var(--vscode-button-secondaryHoverBackground);
}

.layout-presets-btn.active {
  background: var(--vscode-button-background);
  color: var(--vscode-button-foreground);
}

.layout-presets-dropdown {
  position: absolute;
  top: 100%;
  right: 0;
  min-width: 200px;
  background: var(--vscode-dropdown-background);
  border: 1px solid var(--vscode-dropdown-border);
  border-radius: 4px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  z-index: 1000;
  display: none;
  padding: 4px 0;
  margin-top: 2px;
}

.layout-presets-dropdown.show {
  display: block;
}

.layout-preset-item {
  display: flex;
  flex-direction: column;
  padding: 8px 12px;
  cursor: pointer;
  border: none;
  background: none;
  color: var(--vscode-dropdown-foreground);
  text-align: left;
  width: 100%;
  box-sizing: border-box;
}

.layout-preset-item:hover {
  background: var(--vscode-list-hoverBackground);
}

.layout-preset-item.active {
  background: var(--vscode-list-activeSelectionBackground);
  color: var(--vscode-list-activeSelectionForeground);
}

.layout-preset-label {
  font-weight: 500;
  font-size: 13px;
  margin-bottom: 2px;
}

.layout-preset-description {
  font-size: 11px;
  opacity: 0.8;
  color: var(--vscode-descriptionForeground);
}

/* Responsive file info header - collapse to icons when space is limited */
@container (max-width: 320px) {
  /* Hide text labels, show only icons for file info buttons */
  .global-fold-text,
  .sort-text,
  .font-size-text,
  .refresh-text,
  .layout-presets-text {
    display: none;
  }
  
  /* Adjust button sizing for icon-only mode */
  .file-info-right .global-fold-btn,
  .file-info-right .sort-btn,
  .file-info-right .font-size-btn,
  .file-info-right .refresh-btn,
  .file-info-right .layout-presets-btn {
    min-width: 28px;
    padding: 4px;
    gap: 0;
  }
  
  /* Reduce gap between buttons */
  .file-info-right {
    gap: 4px;
  }
}

@container (max-width: 240px) {
  /* Ultra-compact mode - minimal button sizes */
  .file-info-right .global-fold-btn,
  .file-info-right .sort-btn,
  .file-info-right .font-size-btn,
  .file-info-right .refresh-btn,
  .file-info-right .layout-presets-btn {
    min-width: 24px;
    padding: 2px;
  }
  
  /* Even smaller gaps */
  .file-info-right {
    gap: 2px;
  }
}

/* Fallback media queries for browsers without container query support */
@media (max-width: 600px) {
  .global-fold-text,
  .sort-text,
  .font-size-text,
  .refresh-text,
  .layout-presets-text {
    display: none;
  }

  .file-info-right .global-fold-btn,
  .file-info-right .sort-btn,
  .file-info-right .font-size-btn,
  .file-info-right .refresh-btn,
  .file-info-right .layout-presets-btn {
    min-width: 28px;
    padding: 4px;
    gap: 0;
  }
  
  .file-info-right {
    gap: 4px;
  }
}

/* Small font mode for cards */
body.small-card-fonts .task-item {
  font-size: 0.75em;
}

body.small-card-fonts .task-title-display,
body.small-card-fonts .task-description-display {
  font-size: 0.85em;
  line-height: 1.3;
}


body.small-card-fonts .task-item {
  padding: 6px;
}

body.small-card-fonts .task-header {
  gap: 6px;
  margin-bottom: 3px;
}

/* Smaller images in small font mode */
body.small-card-fonts .task-description-container .markdown-content img {
  max-width: 48%;
  max-height: 200px;
  display: inline-block;
  vertical-align: top;
  margin: 2px 2px;
}

body.small-card-fonts .task-title-container .markdown-content img {
  max-width: 48%;
  max-height: 30px;
  margin: 1px 1px;
}

/* Hide collapsed add task button in column header */
.collapsed-add-task-btn {
  display: none !important;
}

/* Clipboard card source */
.clipboard-card-source {
  display: flex;
  align-items: center;
  gap: 4px;
  padding: 3px 6px;
  background: var(--vscode-button-secondaryBackground);
  color: var(--vscode-button-secondaryForeground);
  border: 1px solid var(--vscode-button-border, transparent);
  border-radius: 4px;
  cursor: grab;
  font-size: 12px;
  transition: all 0.2s ease;
  user-select: none;
  position: relative;
}

.clipboard-card-source:hover {
  background: var(--vscode-button-secondaryHoverBackground);
}

/* Clipboard hover preview */
.clipboard-preview {
  position: absolute;
  top: calc(100% + var(--whitespace-div2));
  left: 50%;
  transform: translateX(-50%);
  background: var(--vscode-editorHoverWidget-background);
  border: 1px solid var(--vscode-editorHoverWidget-border);
  border-radius: 6px;
  padding: 12px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  z-index: 1000;
  max-width: 300px;
  display: none;
  pointer-events: none;
}

.clipboard-preview.show {
  display: block;
}

.clipboard-preview-content {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.clipboard-preview-header {
  font-size: 12px;
  font-weight: 600;
  color: var(--vscode-editorHoverWidget-foreground);
  border-bottom: 1px solid var(--vscode-editorHoverWidget-border);
  padding-bottom: 4px;
}

.clipboard-preview-image {
  max-width: 280px;
  max-height: 200px;
  border-radius: 4px;
  border: 1px solid var(--vscode-editorHoverWidget-border);
}

.clipboard-preview-text {
  font-size: 11px;
  color: var(--vscode-editorHoverWidget-foreground);
  font-family: var(--vscode-editor-font-family);
  word-break: break-word;
  max-height: 100px;
  overflow-y: auto;
}

/* Empty card drop source */
.empty-card-source {
  display: flex;
  align-items: center;
  gap: var(--whitespace-div2);
  padding: 3px 6px;
  background: var(--vscode-button-secondaryBackground);
  color: var(--vscode-button-secondaryForeground);
  border: 1px solid var(--vscode-button-border, transparent);
  border-radius: 4px;
  cursor: grab;
  font-size: 12px;
  transition: all 0.2s ease;
  user-select: none;
}

.empty-card-source:hover {
  background: var(--vscode-button-secondaryHoverBackground);
}

.empty-card-source:active,
.empty-card-source.dragging {
  cursor: grabbing;
  opacity: 0.7;
}

.empty-card-source .empty-card-icon {
  font-size: 14px;
}

.empty-card-source .empty-card-text {
  font-weight: 500;
}

.clipboard-card-source:active,
.clipboard-card-source.dragging {
  cursor: grabbing;
  opacity: 0.7;
}

.clipboard-card-source .clipboard-icon {
  font-size: 14px;
}

.clipboard-card-source .clipboard-text {
  font-weight: 500;
}

/* Responsive behavior: hide text when space is limited */
@media (max-width: 600px) {
  .clipboard-card-source .clipboard-text,
  .empty-card-source .empty-card-text {
    display: none;
  }
  
  .clipboard-card-source,
  .empty-card-source {
    padding: 3px;
    min-width: 20px;
  }
}

/* Additional breakpoint for very small screens */
@media (max-width: 480px) {
  .file-info-center {
    gap: 4px;
  }
  
  .clipboard-card-source,
  .empty-card-source {
    padding: 2px;
    font-size: 11px;
  }
  
  .clipboard-card-source .clipboard-icon,
  .empty-card-source .empty-card-icon {
    font-size: 12px;
  }
}

/* Main container - fills viewport below file bar */
#kanban-container {
  position: fixed;
  top: calc(var(--whitespace) + 1px + 24px);
  left: 0;
  right: 0;
  bottom: 0;
  overflow-x: auto;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
}

/* Kanban board */
.kanban-board {
  display: flex;
  flex-wrap: nowrap;
  width: max-content; /* Allow horizontal expansion */
  align-items: flex-start;
}


/* when it has no child - kanban-row */
.kanban-board:not(:has(.kanban-row)) {
	gap: var(--whitespace);
	padding-left: var(--whitespace);
	padding-right: var(--whitespace);
}

.kanban-board.multi-row {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
	overflow: auto;
}

/* Kanban columns - Full height wrapper for sticky positioning */
.kanban-full-height-column {
  /* Transparent wrapper that provides full height for sticky positioning */
  background-color: transparent;
  border: none;
  width: var(--column-width);
  flex-shrink: 0;
  position: relative;
  min-height: 100%;
  transition: all 0.3s ease;
  overflow: visible;
  display: flex;
  flex-direction: column;
  padding: 0;
}

/* Make fonts smaller and padding smaller when content (detected via column-inner) is outside viewport */
.kanban-full-height-column.compact-view {
  font-size: var(--compact-font-size);
}

/* .kanban-full-height-column.compact-view .column-title {
  padding: calc(var(--whitespace) * var(--compact-padding-scale));
} */

/* .kanban-full-height-column.compact-view .column-footer {
  padding-top: calc(var(--whitespace) * var(--compact-padding-scale));
} */

/* .kanban-full-height-column.compact-view .task-item {
  padding: calc(var(--whitespace) * var(--compact-padding-scale));
} */

.kanban-full-height-column.compact-view .column-footer {
  padding-top: var(--compact-column-footer-padding);
}

.kanban-full-height-column.compact-view .column-header {
  padding-bottom: var(--compact-column-footer-padding);
}

.kanban-full-height-column.compact-view .column-margin {
  height: var(--compact-column-margin-height);
}

.kanban-full-height-column.compact-view .column-title-section {
	padding: var(--whitespace-div4) var(--whitespace-div4) 0 var(--whitespace-div4);
	gap: var(--whitespace-div4);
}

.kanban-full-height-column.collapsed-vertical .column-title-section {
	flex-direction: column !important;
	align-items: center;
}

.kanban-column-stack .kanban-full-height-column.compact-view .column-margin {
	height: var(--whitespace-div4);
}

.column-inner {
  /* This is the scrollable container for sticky positioning */
	transform: translateZ(0.02px);
  flex: 1;
  display: flex;
  flex-direction: column;
  /* overflow-y: auto; */ /* must be disabled for sticky childs to work */
	border-left: var(--column-border, 0.5px solid var(--vscode-panel-border));
	border-right: var(--column-border, 0.5px solid var(--vscode-panel-border));
	/* border-bottom: 0.5px solid var(--vscode-panel-border); */
	/* border-radius: 0px 0px 4px 4px; */
  overflow-x: visible;
  /* min-height: 100%; */
	max-height: min-content;
  background-color: transparent;
}

.column-footer {
	padding-top: var(--whitespace-div4);
	position: sticky;
	/* top: 28px; */
	/* border-bottom: 0.5px solid var(--vscode-panel-border); */
	border-left: var(--column-border, 0.5px solid var(--vscode-panel-border));
	border-right: var(--column-border, 0.5px solid var(--vscode-panel-border));
	border-radius: 0px 0px 4px 4px;
}

/* .column-inner :not(has) */

.column-content {
  /* This contains the actual visual column with border and background */
  display: flex;
  flex-direction: column;
  padding: var(--whitespace-div4)  var(--whitespace-div2) var(--whitespace-div4) var(--whitespace-div2);
  flex: 0 0 auto;
  background-color: var(--vscode-editor-background);
  /* border-radius: 0 0 var(--whitespace-div4) var(--whitespace-div4); */
  /* border: 0.5px solid var(--vscode-panel-border); */
  border-top: none;
  margin: 0 var(--whitespace) var(--whitespace) var(--whitespace);
}


.header-bars-container,
.footer-bars-container {
  display: flex;
  flex-direction: column;
  width: 100%;
  flex-shrink: 0;
}

.header-bars-container {
  order: -1;
  /* position: sticky; */ /* should be sticky, but for the moment we dont implement it as the column header must not be overlapped when scrolling */
  /* top: 0px; */
  z-index: 9;
  background-color: var(--vscode-editor-background);
}

.footer-bars-container {
  order: 999;
  margin-top: auto;
}

/* Footer bars in stacked columns are part of sticky column-footer */
.kanban-column-stack .column-footer > .stacked-footer-bars {
  position: relative;
  background-color: var(--vscode-editor-background);
  margin-top: 0;
  width: 100%;
  flex-shrink: 0;
}

/* Ensure header/footer bars work in task items */
.task-item .header-bars-container {
  order: -1;
  flex-shrink: 0;
}

.task-item .footer-bars-container {
  order: 999;
  flex-shrink: 0;
}

/* Column header - receives tag-based header bars, can be styled/faded independently */
.column-header {
	padding-bottom: var(--whitespace-div4);
	position: sticky;
	border-left: var(--column-border, 0.5px solid var(--vscode-panel-border));
	border-right: var(--column-border, 0.5px solid var(--vscode-panel-border));
	border-top: var(--column-border, 0.5px solid var(--vscode-panel-border));
	border-radius: 4px 4px 0px 0px;
}

.column-header {
	transform: translateZ(0.04px);
  position: sticky;
  z-index: 11;
  background-color: var(--vscode-editor-background);
}

/* Column title */
.column-title {
	transform: translateZ(0.06px);
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--whitespace);
  position: sticky;
  /* top: var(--whitespace-div2); */
  z-index: 10;
  background-color: var(--vscode-editor-background);
	/* border-radius: 4px 4px 0px 0px; */
	border-left: var(--column-border, 0.5px solid var(--vscode-panel-border));
	border-right: var(--column-border, 0.5px solid var(--vscode-panel-border));
  border-bottom: 0.25px dashed var(--vscode-panel-border);
	border-top: 0.25px dashed var(--vscode-panel-border);
  margin-bottom: 0;
  flex-direction: column;
}

.column-inner {
  /* This is the scrollable container for sticky positioning */
	transform: translateZ(0.02px);
  flex: 1;
  display: flex;
  flex-direction: column;
  /* overflow-y: auto; */ /* must be disabled for sticky childs to work */
	border-left: var(--column-border, 0.5px solid var(--vscode-panel-border));
	border-right: var(--column-border, 0.5px solid var(--vscode-panel-border));
	/* border-bottom: 0.5px solid var(--vscode-panel-border); */
	/* border-radius: 0px 0px 4px 4px; */
  overflow-x: visible;
  /* min-height: 100%; */
	max-height: min-content;
  background-color: transparent;
}

.column-footer {
	transform: translateZ(0.04px);
	padding-top: var(--whitespace-div4);
	position: sticky;
	/* top: 28px; */
	/* border-bottom: 0.5px solid var(--vscode-panel-border); */
	border-left: var(--column-border, 0.5px solid var(--vscode-panel-border));
	border-right: var(--column-border, 0.5px solid var(--vscode-panel-border));
	border-bottom: var(--column-border, 0.5px solid var(--vscode-panel-border));
	border-radius: 0px 0px 4px 4px;
}


/* Column title section */
.column-title-section {
  padding: 0 var(--whitespace-div2); /* left & right */
  display: flex;
  /* align-items: flex-start; */
	align-items: center;
  gap: var(--whitespace-div4);
  flex: 1;
  min-width: 0;
  margin-top: 0;
  width: -webkit-fill-available;
}

/* Title container that should expand to fill available space */
.column-title-container {
  flex: auto;
  /* min-width: 0;
  display: flex;
  flex-direction: column; */
}


/* Align control elements (icons/buttons) with the title baseline */
.column-title-section > .drag-handle,
.column-title-section > .collapse-toggle,
.column-title-section > .task-count,
.column-title-section > .collapsed-add-task-btn,
.column-title-section > .donut-menu {
  margin-top: 2px; /* Align with title text baseline */
}


/* Column title text */
.column-title-text,
.column-title-text * {
  color: var(--vscode-foreground);
  cursor: pointer;
  border-radius: 3px;
  min-width: 0;
  word-break: break-word;
  display: block;
  margin: 0;
  min-height: 16px;
  width: 100%;
  flex: 1;
  /* Allow text to wrap to multiple lines when too long */
  white-space: normal;
  overflow-wrap: break-word;
  max-height: none;
}

.column-title-text:hover {
  background-color: var(--vscode-list-hoverBackground);
}

/* Columninclude link styling */
.columninclude-link {
  color: var(--vscode-textLink-foreground);
  text-decoration: underline;
  cursor: pointer;
  font-weight: 500;
}

.columninclude-link:hover {
  color: var(--vscode-textLink-activeForeground);
  background-color: var(--vscode-textLink-activeForeground);
  background-color: rgba(var(--vscode-textLink-activeForeground-rgb, 0, 122, 204), 0.1);
}

/* Strikethrough delete button styling */
.strikethrough-container {
  position: relative;
  display: inline;
}

.strikethrough-container:hover .delete-strike-btn {
  opacity: 1;
  visibility: visible;
}

.delete-strike-btn {
  display: inline-block;
  width: 16px;
  height: 16px;
  margin-left: 4px;
  padding: 0;
  border: none;
  border-radius: 2px;
  background-color: var(--vscode-errorBackground, #f48771);
  color: var(--vscode-errorForeground, #ffffff);
  font-size: 12px;
  line-height: 14px;
  cursor: pointer;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.2s ease, visibility 0.2s ease;
  vertical-align: baseline;
}

.delete-strike-btn:hover {
  background-color: var(--vscode-errorHoverBackground, #e74c3c);
  transform: scale(1.1);
}

/* Strikethrough visual effects for broken images and links */
.strikethrough-content img,
.strikethrough-content a {
  text-decoration: line-through !important;
  opacity: 0.6;
  filter: grayscale(100%);
}

.strikethrough-content img {
  /* Add visual indicator for broken images */
  border: 1px dashed var(--vscode-errorForeground, #f48771);
  background-color: var(--vscode-errorBackground, rgba(244, 135, 113, 0.1));
  /* Make broken images smaller and not full width */
  max-width: 200px !important;
  width: auto !important;
  height: auto !important;
  display: inline-block !important;
}

.strikethrough-content a {
  /* Style for broken links */
  color: var(--vscode-errorForeground, #f48771) !important;
}



/* Left side controls (drag handle, collapse toggle) */
.column-left-controls {
  display: flex;
  align-items: center;
  gap: 8px;
  flex-shrink: 0;
}

/* Right side controls (count, add button, menu) */
.column-right-controls {
  display: flex;
  gap: var(--whitespace-div2);
  align-items: center;
  flex-shrink: 0;
}

/* Column controls - keep for backwards compatibility */
.column-controls {
  display: flex;
  gap: var(--whitespace-div2);
  align-items: center;
  flex-shrink: 0;
}


/* Tasks container must allow the children to be overflow visible! */
.tasks-container {
  overflow: visible;
}

/* Task items */
.task-item {
  background-color: var(--vscode-editor-background);
  border: var(--task-border, 1px solid var(--vscode-panel-border));
  border-radius: 4px;
	gap: var(--whitespace-div2);
  margin-bottom: var(--whitespace-div2);
  min-height: var(--task-height);
  transition: all 0.2s ease;
  position: relative;
  overflow: visible;
  display: flex;
  flex-direction: column;
  align-items: stretch;
}

/* Apply min and max height when task height is limited */
.task-height-limited .task-item {
  min-height: var(--task-height) !important;
  max-height: var(--task-height) !important;
}

.task-item:not(:has(.header-bars-container)) {
	padding-top: var(--whitespace-div2);
}

.task-item:not(:has(.footer-bars-container)) {
	padding-bottom: var(--whitespace-div2);
}

.task-item:last-child {
  margin-bottom: 0;
}

.task-item:hover {
  border-color: var(--task-hover-color);
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.task-item.collapsed .task-description-container {
  display: none;
}

/* Task header */
.task-header {
  display: flex;
  align-items: center;
  gap: 8px;
	padding-left: 8px;
	padding-right: 8px;
	/* padding: 8px; */
  /* margin-bottom: 4px; */
  margin-left: 0;
  order: 1;
  flex-shrink: 0;
}

/* Align task header controls with title baseline */
.task-header > .task-drag-handle,
.task-header > .task-collapse-toggle,
.task-header > .task-menu-container {
  margin-top: 2px; /* Align with title text baseline */
}

/* Drag handles */
.drag-handle {
  color: var(--vscode-descriptionForeground);
  cursor: grab;
  font-size: 14px;
  transition: opacity 0.2s;
  user-select: none;
  flex-shrink: 0;
}

.drag-handle:hover {
  opacity: 0.8;
}

.drag-handle:active {
  cursor: grabbing;
}

.task-drag-handle {
  color: var(--vscode-descriptionForeground);
  cursor: grab;
  font-size: 14px;
  opacity: 0.4;
  transition: opacity 0.2s;
  flex-shrink: 0;
  line-height: 1;
  margin-top: 2px;
  user-select: none;
}

.task-item:hover .task-drag-handle {
  opacity: 0.8;
}

.task-drag-handle:hover {
  opacity: 1;
  color: var(--vscode-foreground);
}

.task-drag-handle:active {
  cursor: grabbing;
}

/* Collapse toggles */
.collapse-toggle {
  cursor: pointer;
  font-size: 12px;
  opacity: 0.6;
  transition: all 0.2s;
  user-select: none;
  flex-shrink: 0;
  transform: rotate(90deg);
}

.collapse-toggle:hover {
  opacity: 1;
}

.collapse-toggle.rotated {
  transform: rotate(0deg);
}


.task-collapse-toggle {
  cursor: pointer;
  font-size: 12px;
  opacity: 0.6;
  transition: all 0.2s;
  user-select: none;
  flex-shrink: 0;
  margin-top: 2px;
  transform: rotate(90deg);
}

.task-collapse-toggle:hover {
  opacity: 1;
}

.task-collapse-toggle.rotated {
  transform: rotate(0deg);
}

/* Task title container */
.task-title-container {
  flex: auto;
  /* width: -webkit-fill-available; */
  /* max-width: var(--task-title-width); */
  cursor: pointer;
}

.task-title-container:hover {
  background-color: var(--vscode-list-hoverBackground);
}

.task-title-display {
  font-size: 14px;
  color: var(--vscode-foreground);
  line-height: 1.4;
	/* width: var(--task-title-width); */
  word-break: break-word;
  word-wrap: break-word;
  overflow-wrap: break-word;
  padding: 2px 0;
  border-radius: 3px;
  cursor: pointer;
  min-height: 20px;
}

.task-title-display:hover {
  background-color: var(--vscode-list-hoverBackground);
}

/* Task description */
.task-description-container {
  /* margin-top: 4px; */
  order: 3;
  flex: 1 1 auto;
}

.image-fill-fill .task-description-container {
  position: relative;
  overflow: hidden;
}

.task-description-display {
  color: var(--vscode-foreground);
  font-size: 13px;
  line-height: 1.5;
  border-radius: 3px;
  cursor: pointer;
	padding-left: 8px;
	padding-right: 8px;
  min-height: 20px;
  word-wrap: break-word;
  overflow-wrap: break-word;
	max-height: inherit;
}

/* DISABLED: Causes white overlay on videos when hovering */
/* .task-description-display:hover {
  background-color: var(--vscode-list-hoverBackground);
} */

/* Task section styling for content between HRs */
.task-section {
  display: block;
  outline: none; /* Remove default focus outline */
  border-radius: 4px;
  transition: background-color 0.15s ease;
}

/* Focus styling for task sections */
.task-section:focus {
  outline: 3px solid var(--section-focus-color);
  outline-offset: -3px;
}

/* Apply max-height to sections when section-height-limited class is active */
body.section-height-limited .task-section {
  max-height: var(--section-max-height, auto);
  min-height: var(--section-min-height, auto);
  overflow-y: auto;
  overflow-x: hidden;
  display: flex;
  flex-direction: column;
}

/* Ensure images and figures within sections are constrained by section height */
body.section-height-limited .task-section img {
  max-height: var(--section-max-height, auto);
  object-fit: contain;
  flex-shrink: 1;
}

/* Figures should NOT have object-fit (it's for replaced elements like img/video only) */
body.section-height-limited .task-section figure {
  max-height: var(--section-max-height, auto);
  flex-shrink: 1;
  /* NO object-fit - causes rendering issues on container elements */
}

/* Constrain figure content */
body.section-height-limited .task-section figure img {
  max-height: calc(var(--section-max-height, auto) - 2em);
  width: auto;
  height: auto;
}



/* CSS-based placeholders for empty display elements */
.column-title-text:empty::before {
  content: "Add title...";
  color: var(--vscode-descriptionForeground);
  font-style: italic;
  opacity: 0.7;
}

.task-title-display:empty::before {
  content: "Add title...";
  color: var(--vscode-descriptionForeground);
  font-style: italic;
  opacity: 0.7;
}

.task-description-display:empty::before {
  content: "Add description...";
  color: var(--vscode-descriptionForeground);
  font-size: 13px;
  font-style: italic;
  cursor: pointer;
  padding: 4px 8px;
  border-radius: 3px;
}

/* DISABLED: Related to video overlay issue */
/* .task-description-display:empty:hover::before {
  background-color: var(--vscode-list-hoverBackground);
} */

/* Edit fields */
.column-title-edit,
.task-title-edit,
.task-description-edit {
  border: 1px solid var(--vscode-focusBorder);
  border-radius: 3px;
  background: var(--vscode-input-background);
  color: var(--vscode-foreground);
  font-family: inherit;
  resize: none;
  overflow: hidden;
}

.column-title-edit:focus,
.task-title-edit:focus,
.task-description-edit:focus {
  outline: none;
  border-color: var(--vscode-focusBorder);
}

.column-title-edit {
  font-size: 14px;
  flex: 1;
  padding: 2px 4px;
  min-height: 24px;
  width: 100%;
  min-width: 0;
}


.task-title-edit {
  font-size: 14px;
  line-height: 1.4;
  word-break: break-word;
  padding: 2px 4px;
  resize: none;
  min-height: 20px;
  width: 100%;
  /* width: var(--task-title-width); */
}

.task-description-edit {
  font-size: 13px;
  line-height: 1.5;
  padding: 4px;
  width: 100%;
  min-height: 3em;
}

/* the add task button is styled horizontally and is listed after the last card */
.add-task-btn {
  width: calc(100%);
  background: var(--vscode-button-secondaryBackground);
  color: var(--vscode-button-secondaryForeground);
  border: 1px dashed var(--vscode-panel-border);
  border-radius: 6px;
  padding: 8px;
  font-size: 13px;
  cursor: pointer;
  transition: all 0.2s ease;
}


.add-task-btn:hover {
  background: var(--vscode-button-secondaryHoverBackground);
  border-color: var(--vscode-focusBorder);
}

/* the column button should be styled vertically and is displayed at the end of each row after the last column */
.add-column-btn {
  background: var(--vscode-button-secondaryBackground);
  color: var(--vscode-button-secondaryForeground);
  border: 1px dashed var(--vscode-panel-border);
  border-radius: 6px;
  padding: 16px 8px;  /* Adjust padding for vertical text */
  font-size: 14px;
	margin-top: var(--whitespace);
  cursor: pointer;
  transition: background-color 0.2s;
  align-self: flex-start;
  flex-shrink: 0;
  transform: rotate(180deg);
  writing-mode: vertical-rl;  /* Always vertical */
  min-height: 100px;  /* Ensure minimum height for vertical text */
}

.add-column-btn:hover {
  background: var(--vscode-button-hoverBackground);
  border-color: var(--vscode-focusBorder);
}

.kanban-board.multi-row .add-column-btn.multi-row-add-btn {
  transform: rotate(180deg);
  writing-mode: vertical-rl;
  padding: 12px 8px;
}

.initialise-btn {
  background: var(--vscode-button-background);
  color: var(--vscode-button-foreground);
  border: 1px solid var(--vscode-panel-border);
  border-radius: 6px;
  padding: 16px;
  font-size: 14px;
  cursor: pointer;
  transition: background-color 0.2s;
  align-self: flex-start;
  display: block;
}

/* Count badge */
.task-count {
  border: 1px solid var(--vscode-badge-background);
  color: var(--vscode-badge-foreground);
  border-radius: 4px;
  /* padding: 3px 6px 3px 6px; */
  font-size: 12px;
  font-weight: 500;
  display: flex;
}

.kanban-full-height-column.collapsed-vertical .task-count,
.kanban-full-height-column.collapsed-horizontal .task-count {
	display: none;
}

/* Fix task count color in light mode */
body.vscode-light .task-count,
body.vscode-high-contrast-light .task-count {
  color: var(--vscode-foreground);
}



/* Fold buttons */
.fold-all-btn,
.global-fold-btn {
  background: none;
  border: none;
  color: var(--vscode-foreground);
  cursor: pointer;
  border-radius: 3px;
  transition: all 0.2s;
  display: flex;
  align-items: center;
  justify-content: center;
}

.fold-all-btn {
  padding: 2px 4px;
  font-size: 10px;
  line-height: 1;
  opacity: 0.6;
  min-width: 16px;
  height: 16px;
}

.fold-all-btn:hover {
  opacity: 1;
  background-color: var(--vscode-list-hoverBackground);
}

.global-fold-btn {
  padding: 4px 8px;
  font-size: 12px;
  line-height: 1;
  opacity: 0.7;
  gap: 4px;
  flex-shrink: 0;
  margin-left: 8px;
}

.global-fold-btn:hover {
  opacity: 1;
  background-color: var(--vscode-list-hoverBackground);
}

.fold-icon,
.global-fold-icon {
  display: block;
  line-height: 1;
  transform-origin: center;
  transition: transform 0.2s;
}

.global-fold-icon {
  font-size: 10px;
}

/* Fold button states */
.fold-all-btn.fold-expanded .fold-icon,
.global-fold-btn.fold-expanded .global-fold-icon {
  color: var(--vscode-foreground);
}

.fold-all-btn.fold-collapsed .fold-icon,
.global-fold-btn.fold-collapsed .global-fold-icon {
  color: var(--vscode-charts-blue);
  transform: rotate(0deg);
}

.fold-all-btn.fold-mixed .fold-icon,
.global-fold-btn.fold-mixed .global-fold-icon {
  color: var(--vscode-charts-orange);
  opacity: 0.8;
}



/* File control buttons */
.file-control-btn {
  background: var(--vscode-button-secondaryBackground);
  color: var(--vscode-button-secondaryForeground);
  border: none;
  border-radius: 4px;
  padding: 2px;
  font-size: 12px;
  cursor: pointer;
  transition: background-color 0.2s;
  white-space: nowrap;
}

.file-control-btn:hover {
  background: var(--vscode-button-secondaryHoverBackground);
}

.file-control-btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.file-control-btn.primary {
  background: var(--vscode-button-background);
  color: var(--vscode-button-foreground);
}

.file-control-btn.primary:hover {
  background: var(--vscode-button-hoverBackground);
}


/* Menus */
.donut-menu,
.file-bar-menu {
  position: relative;
  z-index: 100;
}

.file-bar-menu {
  z-index: 200;
}

/* All active menus need maximum z-index to appear above all interface elements */
.donut-menu.active,
.file-bar-menu.active {
  z-index: 2147483647;
  isolation: isolate;
}

.donut-menu-btn {
  background: none;
  border: none;
  color: var(--vscode-foreground);
  cursor: pointer;
  padding: 2px 2px;
  font-size: 18px;
  line-height: 1;
  opacity: 0.6;
  transition: opacity 0.2s;
}

.donut-menu-btn:hover {
  opacity: 1;
}

.file-bar-menu-btn {
  background: none;
  border: none;
  color: var(--vscode-titleBar-activeForeground);
  cursor: pointer;
  padding: 4px 8px;
  font-size: 16px;
  line-height: 1;
  opacity: 0.8;
  transition: opacity 0.2s;
  border-radius: 3px;
}

.file-bar-menu-btn:hover {
  opacity: 1;
  background-color: var(--vscode-list-hoverBackground);
}

.donut-menu-dropdown,
.file-bar-menu-dropdown {
  display: none;
  position: fixed;
  background: var(--vscode-dropdown-background);
  border: 1px solid var(--vscode-dropdown-border);
  border-radius: 4px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.2);
  z-index: 2147483640;
  /* Add hover border for easier targeting */
  padding: 3px;
}

.donut-menu-dropdown {
  min-width: 150px;
}

.file-bar-menu-dropdown {
  min-width: 180px;
}

/* Collapsed column dropdowns are handled by JavaScript positioning */

.donut-menu.active .donut-menu-dropdown,
.file-bar-menu.active .file-bar-menu-dropdown,
.donut-menu-dropdown.moved-to-body,
.file-bar-menu-dropdown.moved-to-body {
  display: block;
}

.donut-menu-item,
.file-bar-menu-item {
  padding: 8px 12px;
  cursor: pointer;
  font-size: 13px;
  color: var(--vscode-dropdown-foreground);
  border: none;
  background: none;
  width: 100%;
  text-align: left;
  position: relative;
  transition: background-color 0.2s;
  white-space: nowrap;
  display: block;
  box-sizing: border-box;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.file-bar-menu-item {
  display: flex;
  align-items: center;
  gap: 8px;
}

.file-bar-menu-item .menu-icon {
  flex-shrink: 0;
  width: 16px;
  text-align: center;
}

button.donut-menu-item,
button.file-bar-menu-item {
  width: 100%;
  text-align: left;
}

.donut-menu-item:hover,
.file-bar-menu-item:hover {
  background-color: var(--vscode-list-hoverBackground);
}

.file-bar-menu-item.selected {
  background-color: var(--vscode-list-activeSelectionBackground);
  color: var(--vscode-list-activeSelectionForeground);
  font-weight: 500;
}

.file-bar-menu-item .menu-checkmark {
  color: var(--vscode-list-activeSelectionForeground);
  font-weight: bold;
  margin-left: auto;
  flex-shrink: 0;
}

.donut-menu-item.has-submenu,
.file-bar-menu-item.has-submenu {
  padding-right: 24px;
}

.donut-menu-item.has-submenu::after {
  content: '▶';
  position: absolute;
  right: 8px;
  top: 50%;
  transform: translateY(-50%);
  font-size: 10px;
  opacity: 0.6;
}

.kanban-full-height-column .donut-menu-item.has-submenu::after {
  content: '◀';
}

.file-bar-menu-item.has-submenu::after {
  content: '◀';
  position: absolute;
  right: 8px;
  top: 50%;
  transform: translateY(-50%);
  font-size: 10px;
  opacity: 0.6;
}

.donut-menu-item.has-submenu::before,
.kanban-full-height-column .donut-menu-item.has-submenu::before,
.file-bar-menu-item.has-submenu::before {
  content: '';
  position: absolute;
  top: 0;
  width: 10px;
  height: 100%;
  z-index: 50;
}

.donut-menu-item.has-submenu::before {
  left: 100%;
}

.kanban-full-height-column .donut-menu-item.has-submenu::before,
.file-bar-menu-item.has-submenu::before {
  right: 100%;
}

.donut-menu-submenu,
.file-bar-menu-submenu {
  display: none;
  position: fixed;
  background: var(--vscode-dropdown-background);
  border: 1px solid var(--vscode-dropdown-border);
  border-radius: 4px;
  box-shadow: 0 4px 16px rgba(0,0,0,0.3);
  min-width: 180px;
  max-width: 280px;
	width: auto;
  max-height: 80vh;
  z-index: 2147483647;
  pointer-events: all !important;
  box-sizing: border-box;
  overflow-x: hidden;
  overflow-y: auto;
  word-wrap: break-word;
}

/* Tag grid submenus need constrained width for wrapping */
.donut-menu-submenu:has(.donut-menu-tags-grid) {
  min-width: 250px;
  max-width: 350px;
  width: 320px;
}

/* Submenus are positioned by JavaScript */

.file-bar-menu-submenu {
  min-width: 140px;
}

/* Ensure all submenu content respects container bounds */
.donut-menu-submenu *,
.file-bar-menu-submenu * {
  max-width: 100%;
}

/* Tag grids in submenus use flex layout */
.donut-menu-submenu .donut-menu-tags-grid {
  display: flex;
  flex-wrap: wrap;
  gap: 4px;
  padding: 8px;
  width: 100%;
  box-sizing: border-box;
}

/* Submenu items prevent overflow */
.donut-menu-submenu .donut-menu-item,
.file-bar-menu-submenu .file-bar-menu-item {
  width: calc(100% - 2px);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* Menu icons don't shrink */
.donut-menu-submenu .menu-icon,
.file-bar-menu-submenu .menu-icon {
  flex-shrink: 0;
}

/* Tag chips in submenus */
.donut-menu-submenu .donut-menu-tag-chip {
  display: flex;
  align-items: center;
  min-width: 60px;
  max-width: calc(50% - 2px);
  overflow: hidden;
  gap: 3px;
  margin: 2px;
  padding: 3px 6px;
  pointer-events: all !important;
  cursor: pointer;
  border-radius: 3px;
  transition: background-color 0.2s ease;
  position: relative;
  z-index: 100001;
}

/* Tag chip text truncates */
.donut-menu-submenu .donut-menu-tag-chip .tag-chip-name {
  flex: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-size: 11px;
}

/* Tag chip check icon fixed size */
.donut-menu-submenu .donut-menu-tag-chip .tag-chip-check {
  flex: none;
  width: 16px;
  height: 16px;
}

/* Submenu visibility now controlled by JavaScript only */
/* .donut-menu-item.has-submenu:hover .donut-menu-submenu,
.file-bar-menu-item.has-submenu:hover .file-bar-menu-submenu {
  display: block;
} */

.donut-menu-submenu button.donut-menu-item,
.file-bar-menu-submenu button.file-bar-menu-item {
  display: block;
  width: 100%;
  text-align: left;
  border: none;
  background: none;
  padding: 8px 12px;
  margin: 0;
  box-sizing: border-box;
  white-space: nowrap;
  cursor: pointer !important;
  font-size: 13px;
  color: var(--vscode-dropdown-foreground);
  transition: background-color 0.2s ease;
  pointer-events: all !important;
  overflow: hidden;
  text-overflow: ellipsis;
  min-width: 0;
  position: relative;
  z-index: 100002;
  /* Ensure buttons are always interactive */
  touch-action: manipulation;
  user-select: none;
}

.donut-menu-submenu button.donut-menu-item:hover,
.file-bar-menu-submenu button.file-bar-menu-item:hover,
.donut-menu-submenu .donut-menu-tag-chip:hover {
  background-color: var(--vscode-list-hoverBackground);
}

.donut-menu-divider,
.file-bar-menu-divider {
  height: 1px;
  background: var(--vscode-panel-border);
  margin: 4px 0;
}

.donut-menu-item.danger {
  color: var(--vscode-errorForeground);
}

/* Span width controls in column menu */
.donut-menu-item.span-width-control {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 8px 12px;
}

.span-width-label {
  font-size: 13px;
  color: var(--vscode-menu-foreground);
}

.span-width-controls {
  display: flex;
  align-items: center;
  gap: 6px;
}

.span-width-btn {
  background: var(--vscode-button-background);
  border: 1px solid var(--vscode-button-border, transparent);
  color: var(--vscode-button-foreground);
  width: 22px;
  height: 22px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 14px;
  font-weight: bold;
  cursor: pointer;
  border-radius: 3px;
  transition: background-color 0.1s ease;
}

.span-width-btn:hover {
  background: var(--vscode-button-hoverBackground);
}

.span-width-btn:active {
  background: var(--vscode-button-background);
  transform: scale(0.95);
}

.span-width-value {
  font-size: 13px;
  color: var(--vscode-menu-foreground);
  min-width: 12px;
  text-align: center;
  font-weight: 500;
}

.donut-menu-item.stack-control {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 8px 12px;
}

.stack-label {
  font-size: 13px;
  color: var(--vscode-menu-foreground);
}

.stack-toggle-btn {
  background: var(--vscode-button-background);
  border: 1px solid var(--vscode-button-border, transparent);
  color: var(--vscode-button-foreground);
  padding: 4px 12px;
  height: 22px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 12px;
  cursor: pointer;
  border-radius: 3px;
  min-width: 32px;
  transition: all 0.1s ease;
}

.stack-toggle-btn:hover {
  background: var(--vscode-button-hoverBackground);
}

.stack-toggle-btn.active {
  background: var(--vscode-button-secondaryBackground);
  color: var(--vscode-button-secondaryForeground);
  border-color: var(--vscode-focusBorder);
}

.kanban-column-stack {
	transform-style: preserve-3d;
  display: grid;
  grid-template: 1fr / 1fr;
  position: relative;
	height: 100%;
}

/* All columns in grid */
.kanban-column-stack .kanban-full-height-column {
	transform-style: preserve-3d;
	perspective: 1000px;
  grid-row: 1;
  grid-column: 1;
  align-self: start;
}


/* Only expanded columns overlay with pointer-events */
.kanban-column-stack .kanban-full-height-column {
  pointer-events: none;
}

/* Re-enable pointer events on interactive child elements */
.kanban-column-stack .kanban-full-height-column .column-header,
.kanban-column-stack .kanban-full-height-column .column-title,
.kanban-column-stack .kanban-full-height-column .column-footer,
.kanban-column-stack .kanban-full-height-column .column-inner {
  pointer-events: auto;
}

/* Add background to column-inner to hide content from columns below */
.kanban-column-stack .kanban-full-height-column .column-inner {
  background: var(--vscode-editor-background);
}

/* Margin spacer above column-title with background (top/bottom set dynamically by JavaScript) */
.kanban-column-stack .kanban-full-height-column .column-margin {
  position: sticky;
  background: var(--vscode-editor-background);
  height: var(--whitespace-div2);
}

/* Sticky headers and titles at bottom with dynamic offsets (set by JavaScript inline styles) */
.kanban-column-stack .kanban-full-height-column .column-header,
.kanban-column-stack .kanban-full-height-column .column-title {
  position: sticky;
  background: var(--vscode-editor-background);
  z-index: 100;
  /* bottom value is set dynamically by applyStackedColumnStyles() */
}

/* Sticky footers at bottom with dynamic offsets (set by JavaScript inline styles) */
.kanban-column-stack .kanban-full-height-column .column-footer {
  position: sticky;
  background: var(--vscode-editor-background);
  z-index: 100;
  /* bottom value is set dynamically by applyStackedColumnStyles() */
}

/* Stack sticky mode: titleonly - only title is sticky */
body.sticky-stack-mode-titleonly .kanban-column-stack .kanban-full-height-column .column-header {
  position: relative !important;
}

body.sticky-stack-mode-titleonly .kanban-column-stack .kanban-full-height-column .column-footer {
  position: relative !important;
}

body.sticky-stack-mode-titleonly .kanban-column-stack .kanban-full-height-column .column-margin {
  position: relative !important;
}

/* Stack sticky mode: none - nothing is sticky */
body.sticky-stack-mode-none .kanban-column-stack .kanban-full-height-column .column-header {
  position: relative !important;
}

body.sticky-stack-mode-none .kanban-column-stack .kanban-full-height-column .column-title {
  position: relative !important;
}

body.sticky-stack-mode-none .kanban-column-stack .kanban-full-height-column .column-footer {
  position: relative !important;
}

body.sticky-stack-mode-none .kanban-column-stack .kanban-full-height-column .column-margin {
  position: relative !important;
}

/* Base styling for collapsed columns */
.kanban-full-height-column.collapsed-vertical,
.kanban-full-height-column.collapsed-horizontal {
  overflow: visible;
  /* width: min-content; */
  position: sticky;
  top: 0;
  align-self: flex-start;
  /* z-index: 5; */
}

.kanban-column-stack.all-vertical-folded .kanban-full-height-column.collapsed-vertical {
	width: min-content;
}

/* Collapsed column inner content */
.kanban-full-height-column.collapsed-vertical .column-inner,
.kanban-full-height-column.collapsed-horizontal .column-inner {
  overflow: visible;
  flex: none;
  display: flex;
  flex-direction: column;
  height: auto;
  min-height: auto;
}

/* Vertical fold: rotate text vertically */
.kanban-full-height-column.collapsed-vertical .column-title-text {
  writing-mode: vertical-rl;
  transform: rotate(180deg);
  display: flex;
  align-items: center;
  justify-content: center;
  flex: 1;
  width: 100%;
  padding: 5px 0;
  margin: 0;
  gap: 4px;
  white-space: nowrap;
}

/* .kanban-full-height-column.collapsed-vertical .column-title-text {
  width: auto;
  display: inline;
} */

/* Horizontal fold: keep text horizontal but narrow */
.kanban-full-height-column.collapsed-horizontal .column-title-text {
  display: flex;
  align-items: center;
  justify-content: center;
  flex: 1;
  width: 100%;
  padding: 0 5px;
  margin: 0;
  gap: 4px;
  white-space: nowrap;
}

/* .kanban-full-height-column.collapsed-horizontal .column-title-text {
  width: auto;
  display: inline;
} */

/* Collapse toggle positioning for collapsed columns */
/* .kanban-full-height-column.collapsed-vertical .collapse-toggle,
.kanban-full-height-column.collapsed-horizontal .collapse-toggle {
  margin: 1px 2px auto;
} */

/* Hide column-inner when collapsed in stacks */
.kanban-column-stack .kanban-full-height-column.collapsed-vertical .column-inner,
.kanban-column-stack .kanban-full-height-column.collapsed-horizontal .column-inner {
  display: none !important;
}

/* Column drop zones for horizontal positioning */
.column-drop-zone-stack {
  display: flex;
  flex-direction: column;
  height: 100%;
  flex-shrink: 0;
}

.column-drop-zone {
  min-width: var(--whitespace);
  height: 100%;
  flex-shrink: 0;
  background: transparent;
  transition: min-width 0.15s ease 0.1s, background 0.2s ease, width 0.15s ease 0.1s;
}

/* Visual feedback for drop zones - no scaling */
.column-drop-zone.drag-over {
  background: var(--vscode-editor-selectionBackground);
  border: 2px dashed var(--vscode-editor-selectionForeground);
  border-radius: 4px;
}

/* Visual separation - add padding to content of stacked columns
.kanban-column-stack .kanban-full-height-column:nth-child(n+2) .column-inner {
  padding-top: var(--whitespace);
} */

/* When all columns in a stack are vertically folded (.collapsed), display them horizontally */
.kanban-column-stack.all-vertical-folded {
  display: flex !important;
  flex-direction: row !important;
  align-items: flex-start;
  gap: var(--whitespace);
  min-height: auto;
}

.kanban-column-stack.all-vertical-folded .kanban-full-height-column {
  min-height: auto;
}

/* Vertically folded columns use sticky positioning based on sticky stack mode setting */
/* Removed position: relative override to allow JavaScript sticky positioning control */

.task-menu-container {
  z-index: 9;
	margin-left: auto; /* align to right */
}

/* Tags menu - base styles (overridden for submenus) */
.donut-menu-tags-grid {
  display: flex;
  flex-wrap: wrap;
  gap: 4px;
  padding: 8px;
  box-sizing: border-box;
  background: var(--vscode-menu-background);
  border: 1px solid var(--vscode-menu-border);
  border-radius: 4px;
  max-width: 300px;
  width: 100%;
}

.donut-menu-tag-chip {
  display: flex;
  align-items: center;
  gap: 4px;
  padding: 4px 8px;
  border: 2px solid;
  border-radius: 12px;
  font-size: 11px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  color: var(--vscode-menu-foreground);
  white-space: nowrap;
  flex: 0 0 auto;
  max-width: none;
  overflow: hidden;
  text-overflow: ellipsis;
  box-sizing: border-box;
  flex-shrink: 0;
  z-index: 999999 !important;
  position: relative !important;
}

.donut-menu-tag-chip:hover {
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  transform: translateY(-1px);
}

.donut-menu-tag-chip.active {
  /* font-weight: bold; */
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);
}

.donut-menu-tag-chip .tag-chip-check {
  font-size: 10px;
  font-weight: bold;
  min-width: 10px;
  display: inline-block;
}

.donut-menu-tag-chip .tag-chip-name {
  text-transform: capitalize;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  max-width: none;
  flex: 1;
  min-width: 0;
}

.donut-menu-item.has-submenu:hover .donut-menu-tags-grid {
  display: flex;
}

/* Tag grid submenus are positioned by JavaScript like all other submenus */

/* Removed conflicting max-width rules - using flexible container instead */

.donut-menu-dropdown {
  overflow: visible;
}

/* Tag chip border colors are set dynamically via inline styles based on tag configuration */

/* Modal */
.modal {
  display: none;
  position: fixed;
  z-index: 2000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0,0,0,0.5);
}

.modal-content {
  background-color: var(--vscode-editor-background);
  margin: 10% auto;
  padding: 20px;
  border: 1px solid var(--vscode-panel-border);
  border-radius: 8px;
  width: 90%;
  max-width: 500px;
  max-height: 80vh;
  overflow-y: auto;
}

.modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
  padding-bottom: 10px;
  border-bottom: 1px solid var(--vscode-panel-border);
}

.modal-title {
  font-size: 18px;
  font-weight: 600;
}

.close-btn {
  background: none;
  border: none;
  font-size: 24px;
  cursor: pointer;
  color: var(--vscode-foreground);
  padding: 0;
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.form-input {
  width: 100%;
  padding: 8px 12px;
  border: 1px solid var(--vscode-input-border);
  border-radius: 4px;
  background-color: var(--vscode-input-background);
  color: var(--vscode-input-foreground);
  font-family: inherit;
  font-size: 14px;
}

.form-input:focus {
  outline: none;
  border-color: var(--vscode-focusBorder);
}

.modal-actions {
  display: flex;
  gap: 12px;
  justify-content: flex-end;
  margin-top: 20px;
  padding-top: 16px;
  border-top: 1px solid var(--vscode-panel-border);
}

.btn {
  padding: 8px 16px;
  border: none;
  border-radius: 4px;
  font-size: 14px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.btn-primary {
  background: var(--vscode-button-background);
  color: var(--vscode-button-foreground);
}

.btn-primary:hover {
  background: var(--vscode-button-hoverBackground);
}

.btn-secondary {
  background: var(--vscode-button-secondaryBackground);
  color: var(--vscode-button-secondaryForeground);
}

.btn-secondary:hover {
  background: var(--vscode-button-secondaryHoverBackground);
}

/* Export Modal Specific Styles */
.export-modal-content {
  max-width: 600px;
}

.export-field {
  margin-bottom: 20px;
}

.export-field label {
  display: block;
  font-weight: 600;
  margin-bottom: 8px;
  color: var(--vscode-foreground);
}

.export-folder-input {
  display: flex;
  gap: 8px;
  align-items: center;
}

.export-folder-input input {
  flex: 1;
}

.export-checkboxes {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 12px;
  margin-top: 8px;
}

.export-checkbox {
  display: flex;
  align-items: center;
  gap: 8px;
  cursor: pointer;
  font-weight: normal;
}

.export-checkbox input[type="checkbox"] {
  width: 16px;
  height: 16px;
  margin: 0;
}

/* Search Panel */
.search-panel {
  position: fixed;
  top: 60px;
  right: 20px;
  background: var(--vscode-dropdown-background);
  border: 1px solid var(--vscode-dropdown-border);
  border-radius: 6px;
  padding: 8px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.3);
  z-index: 2000;
  display: none;
  flex-direction: column;
  gap: 8px;
  min-width: 350px;
}

.search-panel-content {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.search-input {
  padding: 6px 10px;
  border: 1px solid var(--vscode-input-border);
  border-radius: 4px;
  background: var(--vscode-input-background);
  color: var(--vscode-input-foreground);
  font-size: 13px;
  outline: none;
  width: 100%;
}

.search-input:focus {
  border-color: var(--vscode-focusBorder);
}

.search-controls {
  display: flex;
  align-items: center;
  gap: 8px;
}

.search-toggle-btn {
  padding: 4px 8px;
  border: 1px solid var(--vscode-button-border);
  border-radius: 4px;
  background: var(--vscode-button-secondaryBackground);
  color: var(--vscode-button-secondaryForeground);
  font-size: 11px;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.2s;
  min-width: 28px;
}

.search-toggle-btn:hover {
  background: var(--vscode-button-secondaryHoverBackground);
}

.search-toggle-btn.active {
  background: var(--vscode-button-background);
  color: var(--vscode-button-foreground);
  border-color: var(--vscode-focusBorder);
}

.search-counter {
  flex: 1;
  text-align: center;
  font-size: 12px;
  color: var(--vscode-descriptionForeground);
  padding: 0 8px;
}

.search-nav-btn {
  padding: 4px 8px;
  border: 1px solid var(--vscode-button-border);
  border-radius: 4px;
  background: var(--vscode-button-secondaryBackground);
  color: var(--vscode-button-secondaryForeground);
  font-size: 14px;
  cursor: pointer;
  transition: all 0.2s;
}

.search-nav-btn:hover {
  background: var(--vscode-button-secondaryHoverBackground);
}

.search-close-btn {
  padding: 4px 8px;
  border: none;
  border-radius: 4px;
  background: transparent;
  color: var(--vscode-foreground);
  font-size: 18px;
  cursor: pointer;
  transition: all 0.2s;
  line-height: 1;
}

.search-close-btn:hover {
  background: var(--vscode-list-hoverBackground);
}

.search-match {
  background-color: var(--vscode-editor-findMatchBackground) !important;
  outline: 1px solid var(--vscode-editor-findMatchBorder);
  outline-offset: -1px;
}

.search-current-match {
  background-color: var(--vscode-editor-findMatchHighlightBackground) !important;
  outline: 2px solid var(--vscode-editor-findMatchHighlightBorder);
  outline-offset: -1px;
}

/* Multi-row layout */
.kanban-row {
  position: relative;
  transition: all 0.2s;
  display: flex;
  gap: 0px;
  align-items: flex-start;
	/* padding: var(--whitespace); */
  width: 100%;
  box-sizing: border-box;
	
	height: auto; 
	min-height: auto; 
	max-height: none; 
	overflow: visible;
}

.kanban-board.multi-row .kanban-row {
  position: relative;
	margin-top: var(--whitespace-div2);
	border-bottom: 0.5px dashed var(--vscode-panel-border);
}

.kanban-board.multi-row .kanban-row.drag-over {
  background-color: rgba(var(--vscode-focusBorder-rgb, 0, 122, 204), 0.1);
  outline: 2px dashed var(--vscode-focusBorder);
  outline-offset: -2px;
}

.kanban-board.multi-row .row-drop-zone-spacer {
  position: relative;
  z-index: 1;
}

.kanban-board.multi-row .kanban-row:last-child {
  border-bottom: none;
}

.kanban-board.multi-row .kanban-full-height-column {
  flex-shrink: 0;
}

.kanban-row-header {
  position: sticky;
  left: 0;
  background: var(--vscode-editor-background);
  padding: 8px;
  margin-right: var(--whitespace);
  min-width: 60px;
  text-align: center;
  border-radius: 4px;
  border: 1px solid var(--vscode-panel-border);
  font-size: 12px;
  color: var(--vscode-descriptionForeground);
  align-self: flex-start;
  z-index: 10;
  user-select: none;
}

.kanban-row.drag-over {
  background-color: rgba(var(--vscode-focusBorder), 0.1);
  border-radius: 8px;
  box-shadow: inset 0 0 0 2px var(--vscode-focusBorder);
  min-height: 200px;
}

.kanban-row.drag-over::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, 
    transparent 0%, 
    rgba(var(--vscode-focusBorder), 0.05) 50%, 
    transparent 100%);
  pointer-events: none;
}

.kanban-row:has(.kanban-full-height-column.dragging) {
  opacity: 0.9;
}

.kanban-row:not(:has(.kanban-full-height-column)) {
  border: 2px dashed var(--vscode-panel-border);
  background-color: var(--vscode-list-hoverBackground);
  opacity: 0.5;
  padding: 20px;
  text-align: center;
  min-width: 100%;
  width: 100%;
}

.kanban-row:not(:has(.kanban-full-height-column))::after {
  content: "Drop columns here";
  color: var(--vscode-descriptionForeground);
  font-style: italic;
}

.kanban-row:has(.kanban-full-height-column.dragging):not(:has(.kanban-full-height-column:not(.dragging))) {
  border: none;
  background-color: transparent;
  justify-content: flex-start;
  align-items: flex-start;
  width: 100%;
}

.kanban-row:not(:has(.kanban-full-height-column:not(.dragging))) {
  border: 2px dashed var(--vscode-panel-border);
  background-color: var(--vscode-list-hoverBackground);
  justify-content: center;
  align-items: center;
}

.kanban-row:not(:has(.kanban-full-height-column:not(.dragging)))::after {
  content: "Drop columns here for Row " attr(data-row-number);
  color: var(--vscode-descriptionForeground);
  font-style: italic;
  font-size: 14px;
  opacity: 0.7;
}

.kanban-row.drag-over:not(:has(.kanban-full-height-column:not(.dragging)))::after {
  opacity: 1;
  font-weight: bold;
}

.kanban-row:has(.kanban-full-height-column)::after {
  display: none;
}

.kanban-row.drag-over::after {
  display: none;
}

.row-drop-zone-spacer {
  flex: 1 1 auto;
  min-height: 200px;
  pointer-events: all;
  position: relative;
}

.kanban-row.drag-over .row-drop-zone-spacer {
  min-width: 100px;
  background: linear-gradient(90deg, 
    transparent 0%, 
    rgba(var(--vscode-focusBorder), 0.05) 50%, 
    transparent 100%);
}

.column-title-text:not(:has(.column-row-tag)) {
  min-height: inherit;
}

/* Row tags */

/* Drag and drop styles */
.task-item.dragging {
  opacity: 0.5;
}

.kanban-full-height-column.column-dragging {
  opacity: 0.6;
  transform: scale(0.95);
}

.kanban-full-height-column.drag-over .column-title,
.kanban-full-height-column.drag-over .column-content {
  position: relative;
  background-color: var(--vscode-list-hoverBackground);
}

.kanban-full-height-column.dragging {
  z-index: 1000 !important;
  pointer-events: none;
}

/* Multi-row drag overlay fix: ensure proper stacking context for rows */
.kanban-board.multi-row .kanban-row {
  z-index: 1;
}

/* When dragging in multi-row mode, hide column content and set auto height */
.kanban-board.multi-row .kanban-row:has(.kanban-full-height-column.dragging) {
  z-index: 1001; /* Ensure dragging row appears above other rows */
}

/* Hide column content during drag in multi-row to reduce visual clutter */
.kanban-board.multi-row .kanban-full-height-column.dragging .column-content {
  max-height: 100px;
  overflow: hidden;
  opacity: 0.3;
}

/* Show stacked columns during drag operations */
.kanban-board.multi-row .kanban-full-height-column.dragging.column-span-2,
.kanban-board.multi-row .kanban-full-height-column.dragging.column-span-3,
.kanban-board.multi-row .kanban-full-height-column.dragging.column-span-4 {
  opacity: 1;
  pointer-events: auto;
}

.kanban-full-height-column.dragging .column-drag-handle {
  pointer-events: auto !important;
}

.drag-preview {
  opacity: 0.8;
}

.drag-transitioning {
  transition: transform 0.2s ease;
}

.drag-ghost {
  position: absolute;
  pointer-events: none;
  opacity: 0.8;
  z-index: 1000;
}

.task-item.drag-insert-before::before {
  content: '';
  position: absolute;
  top: -4px;
  left: 0;
  right: 0;
  height: 3px;
  background-color: var(--vscode-focusBorder);
  border-radius: 2px;
  z-index: 10;
}

.task-item.drag-insert-after::after {
  content: '';
  position: absolute;
  bottom: -4px;
  left: 0;
  right: 0;
  height: 3px;
  background-color: var(--vscode-focusBorder);
  border-radius: 2px;
  z-index: 10;
}

.kanban-full-height-column.drag-over .column-title::before {
  content: '';
  position: absolute;
  left: -4px;
  top: 0;
  width: 4px;
  height: 100%;
  background-color: var(--vscode-focusBorder);
  z-index: 10;
  border-radius: 2px;
}

.kanban-full-height-column.drag-over .column-content::before {
  content: '';
  position: absolute;
  left: -4px;
  top: 0;
  width: 4px;
  height: 100%;
  background-color: var(--vscode-focusBorder);
  z-index: 10;
  border-radius: 2px;
}

#kanban-container.drag-highlight {
  background-color: rgba(0, 122, 204, 0.1);
  border: 2px dashed var(--vscode-focusBorder);
  border-radius: 8px;
  position: relative;
}

/* Visual feedback when dragging over column header/areas outside tasks */
.kanban-full-height-column.drag-over-append .column-title {
  background-color: var(--vscode-list-hoverBackground) !important;
  border-bottom: 3px solid var(--vscode-focusBorder);
  position: sticky;
}

.kanban-full-height-column.drag-over-append .column-title::after {
  content: 'Drop to add at end';
  position: absolute;
  bottom: -18px;
  left: 50%;
  transform: translateX(-50%);
  background: var(--vscode-editor-background);
  color: var(--vscode-focusBorder);
  padding: 2px 6px;
  border-radius: 3px;
  font-size: 10px;
  white-space: nowrap;
  z-index: 1000;
  pointer-events: none;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);
}

.kanban-full-height-column.external-drag-over .column-title,
.kanban-full-height-column.external-drag-over .column-content {
  background-color: var(--vscode-list-hoverBackground);
  border: 2px dashed var(--vscode-focusBorder);
  border-radius: 8px;
  position: relative;
}

.external-drop-indicator {
  position: absolute;
  left: 10%;
  right: 10%;
  height: 3px;
  background-color: var(--vscode-charts-blue);
  border-radius: 2px;
  z-index: 1000;
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.2s ease;
  box-shadow: 0 0 4px rgba(0, 122, 255, 0.5);
}

.external-drop-indicator.active {
  opacity: 1;
}

.external-drop-indicator::before {
  content: '📎';
  position: absolute;
  left: -20px;
  top: -8px;
  font-size: 14px;
  background: var(--vscode-editor-background);
  padding: 2px 4px;
  border-radius: 4px;
  border: 1px solid var(--vscode-charts-blue);
}

.drop-zone-feedback {
  display: none !important;
  pointer-events: none !important;
  opacity: 0 !important;
}

#drop-zone-feedback {
  display: none !important;
  pointer-events: none !important;
  opacity: 0 !important;
}

/* Markdown content */
.markdown-content {
  word-wrap: break-word;
}

.markdown-content h1,
.markdown-content h2,
.markdown-content h3,
.markdown-content h4,
.markdown-content h5,
.markdown-content h6 {
  /* margin: 0.25em 0 0.125em 0; */
}

.markdown-content p {
  margin: 1em 0;
}

.markdown-content p:first-child {
  margin-top: 0;
}

.markdown-content p:last-child {
  margin-bottom: 0;
}

.markdown-content ul,
.markdown-content ol {
  margin: 0.125em 0;
  padding-left: 1.5em;
}

.markdown-content code {
  background-color: var(--vscode-textCodeBlock-background);
  color: var(--vscode-editor-foreground)	;
  padding: 0.1em 0.3em;
  border-radius: 3px;
  font-size: 0.9em;
}

.markdown-content pre {
  background-color: var(--vscode-textCodeBlock-background);
  color: var(--vscode-textPreformat-foreground);
  padding: 0.5em;
  border-radius: 3px;
  overflow-x: auto;
  margin: 0.25em 0;
}

.markdown-content a {
  color: var(--vscode-textLink-foreground);
  text-decoration: none;
}

.markdown-content a:hover {
  text-decoration: underline;
}

.task-title-container .markdown-content h1,
.task-title-container .markdown-content h2,
.task-title-container .markdown-content h3,
.task-title-container .markdown-content h4,
.task-title-container .markdown-content h5,
.task-title-container .markdown-content h6 {
  margin: 0;
  line-height: inherit;
}

.task-title-container .markdown-content p {
  margin: 0;
  display: inline;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	font-weight: 500;
	font-size: 1em;
}

/* h1,
h2,
h3,
h4,
h5,
h6 {
	font-weight:600;
}

h1 { 
	font-size: 1em; 
	font-weight: 800;
	letter-spacing: -0.02em;
}
h2 { 
	font-size: 1em;
	font-weight: 700;
	letter-spacing: -0.03em;
}

h3 { 
	font-size: 1em;
	font-weight: 700;
}

h4 { 
	font-size: 1em;
	font-weight: 600; 
	color: #333;
}
.vscode-dark h4 {
	color: #ddd;
}

h5 { 
	font-size: 0.95em; 
	letter-spacing: 0.05em;
	font-weight: 700;
	text-transform: uppercase;
	color: #444;
}
.vscode-dark h5 { 
	color: #bbb;
}

h6 { 
	font-size: 0.90em; 
	letter-spacing: 0.05em;
	font-weight: 800;
	text-transform: uppercase;
	color: #666;
}
.vscode-dark h6 {
	color: #999;
} */

blockquote {
  margin-block-start: 0.5em;
  margin-block-end: 0.5em;
  margin-inline-start: 10px;
  margin-inline-end: 20px;
  padding-left: 10px;
  border-left: 2px solid #1371b8;
}

/* Images and files */
.markdown-content img {
  max-width: 100%;
  height: auto;
  border-radius: 4px;
  /* margin: 8px 0; */
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  border: 1px solid var(--vscode-panel-border);
}

.task-title-container .markdown-content img {
  max-width: 100%;
  max-height: 60px;
  margin: 2px 0;
  display: inline-block;
  vertical-align: middle;
}

.task-description-container .markdown-content img {
  max-width: 100%;
  max-height: inherit;
  width: 100%;
  height: 100%;
  /* margin: var(--whitespace) 0; */
  display: block;
  object-fit: contain;
}

.markdown-content a[href$=".pdf"],
.markdown-content a[href$=".doc"],
.markdown-content a[href$=".docx"],
.markdown-content a[href$=".txt"],
.markdown-content a[href$=".zip"],
.markdown-content a[href$=".rar"] {
  display: inline-flex;
  align-items: center;
  padding: 4px 8px;
  background-color: var(--vscode-button-secondaryBackground);
  color: var(--vscode-button-secondaryForeground);
  border-radius: 4px;
  text-decoration: none;
  margin: 2px;
  font-size: 0.9em;
  transition: background-color 0.2s;
}

.markdown-content a[href$=".pdf"]:hover,
.markdown-content a[href$=".doc"]:hover,
.markdown-content a[href$=".docx"]:hover,
.markdown-content a[href$=".txt"]:hover,
.markdown-content a[href$=".zip"]:hover,
.markdown-content a[href$=".rar"]:hover {
  background-color: var(--vscode-button-secondaryHoverBackground);
}

.markdown-content a[href$=".pdf"]::before { content: "📄 "; }
.markdown-content a[href$=".doc"]::before,
.markdown-content a[href$=".docx"]::before { content: "📝 "; }
.markdown-content a[href$=".txt"]::before { content: "📄 "; }
.markdown-content a[href$=".zip"]::before,
.markdown-content a[href$=".rar"]::before { content: "📦 "; }
.markdown-content a[href$=".jpg"]::before,
.markdown-content a[href$=".jpeg"]::before,
.markdown-content a[href$=".png"]::before,
.markdown-content a[href$=".gif"]::before,
.markdown-content a[href$=".svg"]::before { content: "🖼️ "; }

/* we dont use width based settings at all
@media (max-width: 768px) {
  .task-description-container .markdown-content img {
    max-height: 150px;
  }
  
  .task-title-container .markdown-content img {
    max-height: 40px;
  }
} */

/* Tags */
.kanban-tag {
  color: var(--vscode-badge-foreground);
  background-color: var(--vscode-badge-background);
  padding: 0px 2px;
  border-radius: 4px;
  font-size: 0.85em;
  font-weight: 500;
  white-space: nowrap;
  user-select: none;
  border: 1px solid var(--vscode-badge-background);
  transition: all 0.2s ease;
}

.kanban-tag:hover {
  opacity: 0.8;
}

/* Highlight lines/paragraphs containing tags in description */
.task-description-display p:has(.kanban-tag),
.task-description-display li:has(.kanban-tag),
.task-description-display div:has(.kanban-tag) {
  background-color: var(--vscode-list-hoverBackground);
  padding: 2px 4px;
  margin: 2px 0;
  border-radius: 3px;
  border-left: 2px solid var(--vscode-badge-background);
}

/* Special styling for span and row tags */
.kanban-tag[data-tag^="span"],
.kanban-tag[data-tag^="row"] {
  color: #666;
  background-color: transparent;
  border: 1px dashed #999;
  opacity: 0.7;
}

.kanban-full-height-column[data-column-tag] {
  box-sizing: border-box;
  transition: padding 0.2s ease;
}

.task-item[data-task-tag] {
  box-sizing: border-box;
  transition: padding 0.2s ease;
}

.column-title-text .kanban-tag,
.task-title-display .kanban-tag {
  vertical-align: middle;
  display: unset;
}

/* Ensure tags in task descriptions are strictly inline without any card-level styling */
.task-description-display .kanban-tag {
  vertical-align: middle;
  display: inline !important;
  position: static !important;
  /* Ensure inline-only styling - no headers/footers */
  border: 1px solid var(--vscode-badge-background) !important;
  background-color: var(--vscode-badge-background) !important;
  margin: 0 !important;
  padding: 0px 2px !important;
  /* Explicitly remove any pseudo-elements that might create header/footer appearance */
  border-top: none !important;
  border-bottom: none !important;
  box-shadow: none !important;
}

/* Explicitly prevent any pseudo-elements on description tags */
.task-description-display .kanban-tag::before,
.task-description-display .kanban-tag::after {
  display: none !important;
  content: none !important;
}


/* h1 .kanban-tag,
h2 .kanban-tag {
  position: relative;
  top: -4px;
}

h3 .kanban-tag,
h4 .kanban-tag,
h5 .kanban-tag,
h6 .kanban-tag {
  left: -2px;
  position: relative;
}

.collapsed-vertical .column-title h1 .kanban-tag,
.collapsed-vertical .column-title h2 .kanban-tag {
  left: -4px;
  position: relative;
}

.collapsed-vertical h3 .kanban-tag,
.collapsed-vertical h4 .kanban-tag,
.collapsed-vertical h5 .kanban-tag,
.collapsed-vertical h6 .kanban-tag {
  left: -2px;
  position: relative;
} */

/* Corner badges */
.corner-badge {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  font-size: 11px;
  z-index: 100; /* Increased from 50 to appear above borders */
  pointer-events: none;
  transition: all 0.2s ease;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

/* Ensure corner badges for specific tags (like corner-badge-feature) appear above borders */
[class*="corner-badge-"] {
  z-index: 100 !important; /* Ensure all corner badges appear above borders */
  pointer-events: none;
}

/* Adjust corner badge positioning to account for padding */
.kanban-full-height-column .corner-badge,
.kanban-full-height-column [class*="corner-badge-"] {
  /* Override inline styles to push badges outside padding area */
  margin-top: calc(var(--whitespace) * -1) !important;
  margin-right: calc(var(--whitespace) * -1) !important;
}

.corner-badge[data-badge-index="1"] {
  z-index: 100;
}

.corner-badge[data-badge-index="2"] {
  z-index: 101;
}

.corner-badge[data-badge-index="3"] {
  z-index: 102;
}

/* Header and footer bars */
.header-bar,
.footer-bar {
	position: relative;
  width: 100%;
  flex-shrink: 0;
  pointer-events: none;
  transition: all 0.2s ease;
}

/* .header-bar:first-of-type {
	border-radius: 4px 4px 0px 0px;
} */

/* .footer-bar:last-of-type {
	border-radius: 0px 0px 4px 4px;
} */

/* Footer bars styling when in column-footer */
.column-footer > .footer-bars-container {
  position: relative;
  border-top: none;
}

.kanban-full-height-column:not(.collapsed-vertical):not(.collapsed-horizontal) .header-bar,
.kanban-full-height-column:not(.collapsed-vertical):not(.collapsed-horizontal) .footer-bar {
  position: relative;
}

/* Collapsed state - bars stay in containers */
/* .kanban-full-height-column.collapsed-vertical .header-bar,

/* Only bars with labels get the 20px height in collapsed state */

/* Keep original heights for bars without labels - heights set by inline styles from tag configuration */

/* For bars with text content, ensure they have enough height */

.kanban-full-height-column::before,
.kanban-full-height-column::after,
.task-item::before,
.task-item::after {
  pointer-events: none;
}

[data-all-tags] {
  border-width: 0;
}


/* Collapsed column bars - padding set dynamically by JavaScript */

/* .kanban-full-height-column.collapsed-horizontal.has-footer-bar .column-controls  */
.kanban-full-height-column.collapsed-vertical.has-footer-bar .column-controls {
  margin-bottom: 4px;
}

/* .kanban-full-height-column.collapsed-horizontal.has-footer-label,
.kanban-full-height-column.collapsed-horizontal.has-header-label, */

/* .kanban-full-height-column.collapsed-vertical.has-header-label,
.kanban-full-height-column.collapsed-vertical.has-footer-label {
  width: 60px !important;
  min-width: 60px !important;
  max-width: 60px !important;
} */

/* .kanban-full-height-column.collapsed-horizontal.has-header-label.has-footer-label, */
.kanban-full-height-column.collapsed-vertical.has-header-label,
.kanban-full-height-column.collapsed-vertical.has-footer-label,
.kanban-full-height-column.collapsed-vertical.has-header-label.has-footer-label {
  width: 80px !important;
  min-width: 80px !important;
  max-width: 80px !important;
}

.kanban-full-height-column:not(.collapsed-vertical):not(.collapsed-horizontal) .column-content {
  margin: 0;
}

.kanban-full-height-column .corner-badge,
.kanban-full-height-column [class*="corner-badge-"] {
  z-index: 100 !important;
  pointer-events: none;
}




/* .kanban-full-height-column.collapsed-vertical.has-header-bar,
.kanban-full-height-column.collapsed-horizontal.has-header-bar {
  min-height: 200px;
} */



/* Custom (user-added) tags styling */
.donut-menu-tag-chip.custom-tag {
    font-style: italic;
    opacity: 0.9;
}

.donut-menu-tag-chip.custom-tag:not(.active) {
    border-style: dashed !important;
}

.donut-menu-tag-chip.custom-tag.active {
    font-style: normal;
}

/* Visual separator for custom tags section */
.donut-menu-item:has(.custom-tag)::before {
    content: '';
    position: absolute;
    top: 0;
    left: 12px;
    right: 12px;
    height: 1px;
    background: var(--vscode-panel-border);
}

.context-menu {
    position: fixed;
    background: var(--vscode-menu-background);
    border: 1px solid var(--vscode-menu-border);
    border-radius: 4px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.2);
    z-index: 10000;
    min-width: 150px;
    padding: 4px 0;
}

.context-menu-item {
    padding: 6px 12px;
    cursor: pointer;
    font-size: 13px;
    color: var(--vscode-menu-foreground);
}

.context-menu-item:hover {
    background: var(--vscode-menu-selectionBackground);
}

/* Fix collapsed add task button in dark mode */
/* light mode */
body.vscode-light .collapsed-add-task-btn,
body.vscode-high-contrast-light .collapsed-add-task-btn {
  background: #fff;
  color: #000;
  border: 1px solid #000;
}

body.vscode-light .collapsed-add-task-btn:hover,
body.vscode-high-contrast-light .collapsed-add-task-btn:hover {
  background: #fff;
  color: #000;
  border: 1px solid #000;
}

/* dark mode */
.vscode-dark .collapsed-add-task-btn,
.vscode-high-contrast .collapsed-add-task-btn {
    background: #000;
    color: var(--vscode-descriptionForeground);
    border: 1px solid var(--vscode-descriptionForeground);
}

.vscode-dark .collapsed-add-task-btn:hover,
.vscode-high-contrast .collapsed-add-task-btn:hover {
    /* background: #ffffff; */
    background: #1a1a1a;
    color: var(--vscode-descriptionForeground);
    border: 1px solid var(--vscode-descriptionForeground);
}

/* Date and person tags */
.kanban-date-tag {
    color: var(--vscode-charts-blue);
    background-color: rgba(0, 122, 204, 0.1);
    padding: 0px 4px;
    border-radius: 4px;
    font-size: 0.85em;
    font-weight: 500;
    white-space: nowrap;
    user-select: none;
    border: 1px solid var(--vscode-charts-blue);
    transition: all 0.2s ease;
    position: relative;
    padding-left: 16px;
}

.kanban-date-tag::before {
    content: '📅';
    position: absolute;
    left: 2px;
    font-size: 10px;
}

.kanban-person-tag {
    color: var(--vscode-charts-purple);
    background-color: rgba(138, 43, 226, 0.1);
    padding: 0px 4px;
    border-radius: 4px;
    font-size: 0.85em;
    font-weight: 500;
    white-space: nowrap;
    user-select: none;
    border: 1px solid var(--vscode-charts-purple);
    transition: all 0.2s ease;
    position: relative;
    padding-left: 16px;
}

.kanban-person-tag::before {
    content: '👤';
    position: absolute;
    left: 2px;
    font-size: 10px;
}

.kanban-date-tag:hover,
.kanban-person-tag:hover {
    opacity: 0.8;
}

/* Sort button */
.sort-btn {
    background: none;
    border: none;
    color: var(--vscode-foreground);
    cursor: pointer;
    border-radius: 3px;
    transition: all 0.2s;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 4px 8px;
    font-size: 12px;
    line-height: 1;
    opacity: 0.7;
    gap: 4px;
    flex-shrink: 0;
    margin-left: 8px;
}

.sort-btn:hover {
    opacity: 1;
    background-color: var(--vscode-list-hoverBackground);
}

.sort-icon {
    font-size: 14px;
}

/* Focus highlight animation for undo/redo */
.focus-highlight {
    animation: focusHighlight 2s ease-out;
    position: relative;
}

@keyframes focusHighlight {
    0% {
        box-shadow: 0 0 0 4px var(--vscode-focusBorder);
        background-color: var(--vscode-list-activeSelectionBackground);
    }
    50% {
        box-shadow: 0 0 0 8px var(--vscode-focusBorder);
    }
    100% {
        box-shadow: 0 0 0 0 transparent;
        background-color: transparent;
    }
}





/* ============================================
   MARKDOWN ICON CSS - Compact Width Version
   ============================================ */

/* Auto-insert compact style indicators - only within .markdown-content */

/* Headings - only before */
.markdown-content h1::before,
.markdown-content h2::before,
.markdown-content h3::before,
.markdown-content h4::before,
.markdown-content h5::before,
.markdown-content h6::before {
  display: inline-block; text-align: center;
  width: 14px !important; min-width: 14px !important; max-width: 14px !important;
  height: 14px !important; min-height: 14px !important; max-height: 14px !important;
  margin-right: 4px; padding: 0 !important;
  border: 1px solid rgba(102, 102, 102, 0.5); border-radius: 2px;
  font-family: monospace !important; font-size: 8px !important; 
  font-weight: bold !important; font-style: normal !important;
  background: rgba(240, 240, 240, 0.6); color: rgba(51, 51, 51, 0.7);
  line-height: 14px !important; vertical-align: middle; opacity: 0.7;
  box-sizing: border-box !important; overflow: hidden !important;
  letter-spacing: normal !important; word-spacing: normal !important;
  text-transform: none !important; white-space: nowrap !important;
}
.markdown-content h1::before { content: "H1"; }
.markdown-content h2::before { content: "H2"; }
.markdown-content h3::before { content: "H3"; }
.markdown-content h4::before { content: "H4"; }
.markdown-content h5::before { content: "H5"; }
.markdown-content h6::before { content: "H6"; }

/* Paragraph - only before (DISABLED - too common) */
/*
.markdown-content p::before {
  content: "¶"; display: inline-block;
  width: 16px; height: 16px; margin-right: 4px;
  border: 1px solid rgba(102, 102, 102, 0.5); border-radius: 2px;
  font-family: monospace; font-size: 11px !important;
  background: rgba(240, 240, 240, 0.6); color: rgba(51, 51, 51, 0.7);
  text-align: center; line-height: 16px !important;
  vertical-align: middle; opacity: 0.7;
}
*/

/* Bold - before and after */
.markdown-content strong::before, .markdown-content strong::after,
.markdown-content b::before, .markdown-content b::after {
  content: "*"; display: inline-block;
  width: 10px; height: 14px;
  border: 1px solid rgba(102, 102, 102, 0.5); border-radius: 2px;
  font-family: monospace; font-size: 9px !important; font-weight: bold;
  background: rgba(240, 240, 240, 0.6); color: rgba(51, 51, 51, 0.7);
  text-align: center; line-height: 14px !important;
  vertical-align: middle; opacity: 0.6;
}
.markdown-content strong::before, .markdown-content b::before { margin-right: 2px; }
.markdown-content strong::after, .markdown-content b::after { margin-left: 2px; }

/* Italic - before and after */
.markdown-content em::before, .markdown-content em::after,
.markdown-content i::before, .markdown-content i::after {
  content: "_"; display: inline-block;
  width: 10px; height: 14px;
  border: 1px solid rgba(102, 102, 102, 0.5); border-radius: 2px;
  font-family: monospace; font-size: 9px !important; font-style: normal;
  background: rgba(240, 240, 240, 0.6); color: rgba(51, 51, 51, 0.7);
  text-align: center; line-height: 14px !important;
  vertical-align: middle; opacity: 0.6;
}
.markdown-content em::before, .markdown-content i::before { margin-right: 2px; }
.markdown-content em::after, .markdown-content i::after { margin-left: 2px; }

/* Strikethrough - before and after */
.markdown-content del::before, .markdown-content del::after,
.markdown-content s::before, .markdown-content s::after,
.markdown-content strike::before, .markdown-content strike::after {
  content: "~"; display: inline-block;
  width: 10px; height: 14px;
  border: 1px solid rgba(102, 102, 102, 0.5); border-radius: 2px;
  font-family: monospace; font-size: 9px !important;
  background: rgba(240, 240, 240, 0.6); color: rgba(51, 51, 51, 0.7);
  text-align: center; line-height: 14px !important;
  vertical-align: middle; text-decoration: none; opacity: 0.6;
}
.markdown-content del::before, .markdown-content s::before, .markdown-content strike::before { margin-right: 2px; }
.markdown-content del::after, .markdown-content s::after, .markdown-content strike::after { margin-left: 2px; }

/* Inline code - before and after */
.markdown-content code::before, .markdown-content code::after {
  content: "`"; display: inline-block;
  width: 10px; height: 14px;
  border: 1px solid rgba(102, 102, 102, 0.5); border-radius: 2px;
  font-family: monospace; font-size: 10px !important; font-weight: bold;
  background: rgba(240, 240, 240, 0.6); color: rgba(51, 51, 51, 0.7);
  text-align: center; line-height: 14px !important;
  vertical-align: middle; opacity: 0.6;
}
.markdown-content code::before { margin-right: 2px; }
.markdown-content code::after { margin-left: 2px; }
.markdown-content pre code::before, .markdown-content pre code::after { display: none; }

/* Preformatted text / Code block - only before */
.markdown-content pre::before {
  content: "{}"; display: inline-block; float: left;
  width: 20px; height: 16px; margin-right: 6px; margin-top: 2px;
  border: 1px solid rgba(102, 102, 102, 0.5); border-radius: 2px;
  font-family: monospace; font-size: 9px !important; font-weight: bold;
  background: rgba(45, 45, 45, 0.6); color: rgba(255, 255, 255, 0.8);
  text-align: center; line-height: 16px !important;
  vertical-align: top; opacity: 0.7;
}

/* Underline - before and after */
.markdown-content u::before, .markdown-content u::after {
  content: "u"; display: inline-block;
  width: 10px; height: 14px;
  border: 1px solid rgba(102, 102, 102, 0.5); border-radius: 2px;
  font-family: monospace; font-size: 8px !important; font-weight: bold;
  background: rgba(240, 240, 240, 0.6); color: rgba(51, 51, 51, 0.7);
  text-align: center; line-height: 14px !important;
  vertical-align: middle; text-decoration: none;
  text-transform: lowercase; opacity: 0.6;
}
.markdown-content u::before { margin-right: 2px; }
.markdown-content u::after { margin-left: 2px; }

/* Mark/Highlight - before and after */
.markdown-content mark::before, .markdown-content mark::after {
  content: "="; display: inline-block;
  width: 10px; height: 14px;
  border: 1px solid rgba(102, 102, 102, 0.5); border-radius: 2px;
  font-family: monospace; font-size: 9px !important; font-weight: bold;
  background: rgba(255, 235, 59, 0.4); color: rgba(51, 51, 51, 0.7);
  text-align: center; line-height: 14px !important;
  vertical-align: middle; opacity: 0.6;
}
.markdown-content mark::before { margin-right: 2px; }
.markdown-content mark::after { margin-left: 2px; }

/* Blockquote - only before */
/* .markdown-content blockquote::before {
  content: ">"; display: inline-block; float: left;
  width: 16px; height: 16px; margin-right: 6px; margin-top: 2px;
  border: 1px solid rgba(102, 102, 102, 0.5); border-radius: 2px;
  font-family: monospace; font-size: 12px !important; font-weight: bold;
  background: rgba(240, 240, 240, 0.6); color: rgba(51, 51, 51, 0.7);
  text-align: center; line-height: 16px !important;
  vertical-align: top; opacity: 0.7;
} */

/* Lists - only before (UL DISABLED - too common) */
/*
.markdown-content ul > li::before {
  content: "•"; display: inline-block;
  width: 16px; height: 16px; margin-right: 6px; margin-left: -24px;
  border: 1px solid rgba(102, 102, 102, 0.5); border-radius: 2px;
  font-size: 12px !important; font-weight: bold;
  background: rgba(240, 240, 240, 0.6); color: rgba(51, 51, 51, 0.7);
  text-align: center; line-height: 14px !important;
  vertical-align: middle; opacity: 0.7;
}
*/

/* .markdown-content ol > li::before {
  content: "#"; display: inline-block;
  width: 16px; height: 16px; margin-right: 6px; margin-left: -24px;
  border: 1px solid rgba(102, 102, 102, 0.5); border-radius: 2px;
  font-family: monospace; font-size: 10px !important; font-weight: bold;
  background: rgba(240, 240, 240, 0.6); color: rgba(51, 51, 51, 0.7);
  text-align: center; line-height: 16px !important;
  vertical-align: middle; opacity: 0.7;
} */

/* Links - before and after with brackets */
.markdown-content a::before, .markdown-content a::after {
  display: inline; width: 10px; height: 14px;
  border: 1px solid rgba(74, 144, 226, 0.5); border-radius: 2px;
  font-family: monospace; font-size: 10px !important; font-weight: bold;
  background: rgba(227, 242, 253, 0.6); color: rgba(25, 118, 210, 0.7);
  text-align: center; line-height: 14px !important;
  vertical-align: middle; opacity: 0.6;
}
.markdown-content a::before { content: "["; margin-right: 2px; }
.markdown-content a::after { content: "]"; margin-left: 2px; }

/* Tables - only before */
.markdown-content table::before {
  content: "⊞"; display: inline-block;
  width: 20px; height: 16px; margin-right: 6px; margin-bottom: 4px;
  border: 1px solid rgba(102, 102, 102, 0.5); border-radius: 2px;
  font-family: monospace; font-size: 12px !important; font-weight: bold;
  background: rgba(240, 240, 240, 0.6); color: rgba(51, 51, 51, 0.7);
  text-align: center; line-height: 16px !important; opacity: 0.7;
}

/* Horizontal rule - only before */
/* .markdown-content hr::before {
  content: "—"; display: block; position: relative;
  width: 20px; height: 16px; top: -8px; margin: 0 auto;
  border: 1px solid rgba(102, 102, 102, 0.5); border-radius: 2px;
  font-family: monospace; font-size: 10px !important; font-weight: bold;
  background: rgba(240, 240, 240, 0.6); color: rgba(51, 51, 51, 0.7);
  text-align: center; line-height: 16px !important; opacity: 0.7;
} */

/* Superscript/Subscript - before and after */
.markdown-content sup::before, .markdown-content sup::after,
.markdown-content sub::before, .markdown-content sub::after {
  display: inline-block; width: 10px; height: 12px;
  border: 1px solid rgba(102, 102, 102, 0.5); border-radius: 2px;
  font-family: monospace; font-size: 8px !important; font-weight: bold;
  background: rgba(240, 240, 240, 0.6); color: rgba(51, 51, 51, 0.7);
  text-align: center; line-height: 12px !important;
  vertical-align: middle; opacity: 0.6;
}
.markdown-content sup::before, .markdown-content sup::after { content: "^"; }
.markdown-content sub::before, .markdown-content sub::after { content: "˅"; }
.markdown-content sup::before, .markdown-content sub::before { margin-right: 1px; }
.markdown-content sup::after, .markdown-content sub::after { margin-left: 1px; }

/* Keyboard input - before and after */
.markdown-content kbd::before, .markdown-content kbd::after {
  content: "⌘"; display: inline-block;
  width: 10px; height: 14px;
  border: 1px solid rgba(102, 102, 102, 0.5); border-radius: 2px;
  font-family: monospace; font-size: 8px !important;
  background: rgba(240, 240, 240, 0.6); color: rgba(51, 51, 51, 0.7);
  text-align: center; line-height: 14px !important;
  vertical-align: middle; opacity: 0.6;
}
.markdown-content kbd::before { margin-right: 2px; }
.markdown-content kbd::after { margin-left: 2px; }

/* Abbreviation - before and after */
.markdown-content abbr::before, .markdown-content abbr::after {
  content: "?"; display: inline-block;
  width: 10px; height: 12px;
  border: 1px solid rgba(102, 102, 102, 0.5); border-radius: 2px;
  font-family: monospace; font-size: 8px !important; font-weight: bold;
  background: rgba(240, 240, 240, 0.6); color: rgba(51, 51, 51, 0.7);
  text-align: center; line-height: 12px !important;
  vertical-align: middle; opacity: 0.6;
}
.markdown-content abbr::before { margin-right: 1px; }
.markdown-content abbr::after { margin-left: 1px; }

/* Collapsed state adjustments */

/* Column width is now handled via --column-width CSS variable set from baseOptions */
/* This allows all width values (px and vw) to be defined in one place: baseOptions.columnWidth */

/* Column Span Classes - for columns that span multiple widths */
.kanban-full-height-column.column-span-2 {
  width: calc(var(--column-width) * 2 + var(--whitespace)) !important; /* 2x width plus 1 gap */
  flex-shrink: 0;
}

.kanban-full-height-column.column-span-3 {
  width: calc(var(--column-width) * 3 + var(--whitespace) * 2) !important; /* 3x width plus 2 gaps */
  flex-shrink: 0;
}

.kanban-full-height-column.column-span-4 {
  width: calc(var(--column-width) * 4 + var(--whitespace) * 3) !important; /* 4x width plus 3 gaps */
  flex-shrink: 0;
}

/* Collapsed span columns should use normal collapsed width */
.kanban-full-height-column.collapsed-vertical.column-span-2,
.kanban-full-height-column.collapsed-horizontal.column-span-2,
.kanban-full-height-column.collapsed-vertical.column-span-3,
.kanban-full-height-column.collapsed-horizontal.column-span-3,
.kanban-full-height-column.collapsed-vertical.column-span-4,
.kanban-full-height-column.collapsed-horizontal.column-span-4 {
  width: var(--collapsed-column-width) !important;
  min-width: var(--collapsed-column-width) !important;
  max-width: var(--collapsed-column-width) !important;
}

/* Font size classes are now generated dynamically by JavaScript */

/* Note: Sticky header disabling for large fonts removed - now controlled manually via burger menu */

/* Disable sticky header for tall task minimum heights */
body.tall-task-height .column-title {
  position: relative !important;
  top: auto !important;
}

/* Disable sticky header when manually disabled by user */
body.sticky-headers-disabled .column-title {
  position: relative !important;
  top: auto !important;
}

/* Import Google Fonts */
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;500;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Lato:wght@300;400;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Fira+Code:wght@300;400;500;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@300;400;500;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@300;400;500;600;700&display=swap');

/* Font family styles */
body.font-family-system {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
}

body.font-family-roboto {
  font-family: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
}

body.font-family-opensans {
  font-family: 'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
}

body.font-family-lato {
  font-family: 'Lato', -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
}

body.font-family-poppins {
  font-family: 'Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
}

body.font-family-inter {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
}

body.font-family-helvetica {
  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
}

body.font-family-arial {
  font-family: Arial, sans-serif;
}

body.font-family-georgia {
  font-family: Georgia, 'Times New Roman', serif;
}

body.font-family-times {
  font-family: 'Times New Roman', Times, serif;
}

body.font-family-firacode {
  font-family: 'Fira Code', 'SF Mono', Monaco, Inconsolata, 'Roboto Mono', monospace;
}

body.font-family-jetbrains {
  font-family: 'JetBrains Mono', 'SF Mono', Monaco, Inconsolata, 'Roboto Mono', monospace;
}

body.font-family-sourcecodepro {
  font-family: 'Source Code Pro', 'SF Mono', Monaco, Inconsolata, 'Roboto Mono', monospace;
}

body.font-family-consolas {
  font-family: Consolas, 'Courier New', monospace;
}

/* Card focus styles for keyboard navigation */
.task-item.card-focused {
    outline: 3px solid var(--task-focus-color);
    outline-offset: -3px;
    position: relative;
    z-index: 1;
}

/* Multi-column layout styles */
.multicolumn {
    display: flex !important;
    flex-direction: row !important;
    align-items: flex-start !important;
    gap: 10px;
    margin: 10px 0;
}

.multicolumn-column {
    flex-basis: 0 !important;
    padding: 10px;
    min-width: 0; /* Allow columns to shrink */
}

/* Mark/highlight styling */
mark {
    background-color: var(--vscode-editor-findMatchHighlightBackground, #ffaa88);
    color: var(--vscode-editor-foreground);
    padding: 1px 2px;
    border-radius: 2px;
}

/* Additional markdown-it plugin styles */
sub, sup {
    font-size: 0.75em;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}

sub {
    bottom: -0.25em;
}

sup {
    top: -0.5em;
}

ins {
    text-decoration: underline;
    background-color: var(--vscode-editor-insertedTextBackground, rgba(0, 255, 0, 0.2));
    color: var(--vscode-editor-foreground);
}

u {
    text-decoration: underline;
}

s {
    text-decoration: line-through;
}

/* Container styles */
.note, .comment, .highlight {
    margin: 10px 0;
    padding: 10px;
    border-radius: 4px;
    border-left: 4px solid;
}

.note {
    background-color: var(--vscode-textBlockQuote-background, rgba(0, 122, 204, 0.1));
    border-left-color: var(--vscode-textBlockQuote-border, #007acc);
}

.comment {
    background-color: var(--vscode-editor-inactiveSelectionBackground, rgba(128, 128, 128, 0.1));
    border-left-color: var(--vscode-descriptionForeground, #888);
}

.highlight {
    background-color: var(--vscode-editor-findMatchHighlightBackground, rgba(255, 235, 59, 0.3));
    border-left-color: var(--vscode-editor-findMatchBorder, #ffeb3b);
}

.mark-red { background-color: rgba(255, 0, 0, 0.1); border-left-color: #ff0000; }
.mark-green { background-color: rgba(0, 255, 0, 0.1); border-left-color: #00ff00; }
.mark-blue { background-color: rgba(0, 0, 255, 0.1); border-left-color: #0000ff; }
.mark-cyan { background-color: rgba(0, 255, 255, 0.1); border-left-color: #00ffff; }
.mark-magenta { background-color: rgba(255, 0, 255, 0.1); border-left-color: #ff00ff; }
.mark-yellow { background-color: rgba(255, 255, 0, 0.1); border-left-color: #ffff00; }

.center { text-align: center; }
.center100 { text-align: center; width: 100%; }
.right { text-align: right; }
.caption {
    font-style: italic;
    text-align: center;
    color: var(--vscode-descriptionForeground, #888);
    font-size: 0.9em;
}

/* Include file processing styles */
.include-placeholder {
    display: inline-block;
    padding: 2px 6px;
    background-color: var(--vscode-badge-background, rgba(0, 122, 204, 0.2));
    color: var(--vscode-badge-foreground, var(--vscode-foreground));
    border-radius: 3px;
    font-size: 0.85em;
    font-family: var(--vscode-font-family);
    border: 1px solid var(--vscode-panel-border, rgba(255, 255, 255, 0.1));
    animation: pulse 2s infinite;
}

/* Deprecated - include-icon now handled via ::before pseudo-element */

.include-error {
    display: inline-block;
    padding: 2px 6px;
    background-color: var(--vscode-errorBackground, rgba(255, 0, 0, 0.1));
    color: var(--vscode-errorForeground, #ff6b6b);
    border-radius: 3px;
    font-size: 0.85em;
    font-family: var(--vscode-font-family);
    border: 1px solid var(--vscode-errorBorder, rgba(255, 0, 0, 0.3));
}

.included-content-inline {
    /* Inline included content should blend seamlessly */
    display: block;
    border-top: 1px solid gray;
    border-bottom: 1px solid gray;
    position: relative;
    padding-right: 25px; /* Make room for the icon in top-right */
    padding-top: 5px;
    padding-bottom: 5px;
    padding-left: 5px;
    min-height: 20px; /* Ensure minimum height for icon placement */
}

/* Add icon in top right corner of included content */
.included-content-inline::before {
    content: "📄";
    position: absolute;
    top: 2px;
    right: 2px;
    cursor: pointer;
    padding: 1px 3px;
    border-radius: 2px;
    font-size: 14px;
    opacity: 0.7;
    transition: all 0.2s ease;
    height: 14px;
    width: 14px;
    line-height: 14px;
    text-align: center;
    z-index: 1;
    background-color: var(--vscode-editor-background);
}

.included-content-inline:hover::before {
    opacity: 1;
    background-color: var(--vscode-button-hoverBackground, rgba(255, 255, 255, 0.1));
    transform: scale(1.1);
}

.included-content-block {
    /* Block included content with visual indication */
    display: block;
		border: 0.5px dashed gray;
    /* border-top: 1px  gray;
    border-bottom: 1px solid gray;
    border-left: 2px solid var(--vscode-panel-border, rgba(255, 255, 255, 0.1)); */
    position: relative;
    padding-right: 25px; /* Make room for the icon in top-right */
    padding-top: 5px;
    padding-bottom: 5px;
    padding-left: 8px;
    margin: 4px 0;
    min-height: 20px; /* Ensure minimum height for icon placement */
}

/* Add icon in top right corner of block included content */
.included-content-block::before {
    content: "📄";
    position: absolute;
    top: 2px;
    right: 2px;
    cursor: pointer;
    padding: 1px 3px;
    border-radius: 2px;
    font-size: 14px;
    opacity: 0.7;
    transition: all 0.2s ease;
    height: 14px;
    width: 14px;
    line-height: 14px;
    text-align: center;
    z-index: 1;
    background-color: var(--vscode-editor-background);
}

.included-content-block:hover::before {
    opacity: 1;
    background-color: var(--vscode-button-hoverBackground, rgba(255, 255, 255, 0.1));
    transform: scale(1.1);
}

@keyframes pulse {
    0% { opacity: 1; }
    50% { opacity: 0.6; }
    100% { opacity: 1; }
}

/* Tag Visibility Controls */
/* Standard Tags: Hide #span and #row tags only */
.tag-visibility-allexcludinglayout .kanban-tag[data-tag^="span"],
.tag-visibility-allexcludinglayout .kanban-tag[data-tag^="row"] {
    display: none !important;
}

/* Custom Tags Only: Hide #span, #row, and all configured tags (but show @ tags) */
.tag-visibility-customonly .kanban-tag[data-tag^="span"],
.tag-visibility-customonly .kanban-tag[data-tag^="row"],
.tag-visibility-customonly .kanban-tag:not([data-tag^="@"]):not(.custom-tag) {
    display: none !important;
}

/* @ Tags Only: Hide all tags except @ tags */
.tag-visibility-mentionsonly .kanban-tag:not([data-tag^="@"]) {
    display: none !important;
}

/* No Tags: Hide all tags */
.tag-visibility-none .kanban-tag {
    display: none !important;
}

/* Image figures with captions */
figure {
  margin: 0;
  display: block;
}

figcaption {
  font-size: 0.8em;
  color: var(--vscode-descriptionForeground);
  margin-top: 4px;
  text-align: center;
}

/* Image Fill Controls */
/* Default: Images fit their natural content size (use existing behavior) */
.image-fill-fit .task-title-container .markdown-content img,
.image-fill-fit .task-description-container .markdown-content img {
    /* Use existing default styles */
}

/* Fill Space: Images scale to use available space while maintaining aspect ratio */
.image-fill-fill .task-title-container .markdown-content img {
    max-width: 100% !important;
    width: auto !important;
    height: auto !important;
    max-height: inherit;
    object-fit: contain !important;
    object-position: left !important;
}

.image-fill-fill .task-description-container .markdown-content img {
    width: 100% !important;
    height: auto !important;
    max-width: 100% !important;
    object-fit: contain !important;
    object-position: center !important;
    display: block !important;
}

/* Ensure task-description-container respects height constraints in height-limited mode */
.task-height-limited .image-fill-fill .task-description-container {
    height: 100% !important;
    box-sizing: border-box !important;
}

/* In height-limited mode, images must fit within the container bounds */
.task-height-limited .image-fill-fill .task-description-container .markdown-content img {
    max-height: 100% !important;
    height: auto !important;
    object-fit: contain !important;
}
